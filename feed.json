{
    "version": "https://jsonfeed.org/version/1",
    "title": "Alan",
    "description": "",
    "home_page_url": "https://alanosy.github.io",
    "items": [
        {
            "id": "https://alanosy.github.io/2021/01/26/hello-world/",
            "url": "https://alanosy.github.io/2021/01/26/hello-world/",
            "title": "Hello Hexo",
            "date_published": "2021-01-26T06:20:39.695Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/python-day-1/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/python-day-1/",
            "title": "python_day_1",
            "date_published": "2021-01-26T05:39:02.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p>Python 是一种通用编程语言，其在科学计算和机器学习领域具有广泛的应用。如果我们打算利用 Python 来执行机器学习，那么对 Python 有一些基本的了解就是至关重要的。本 Python 入门系列体验就是为这样的初学者精心准备的。</p>\n<p>本实验包括以下内容：</p>\n<ul>\n<li>\n<p>变量、运算符与数据类型</p>\n<ul>\n<li>\n<p><strong>注释</strong></p>\n<p>在 python 中，# 表示注释，作用于整行</p>\n<p>例如：</p>\n<pre><code class=\"language-bashs\">print(&quot;Hello World&quot;)\n#我的第一个程序\n</code></pre>\n<p>其中” 我的第一个程序 “在代码不起运行作用</p>\n<p>另外还有多行注释用 ``` 来标注</p>\n<p>例如</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>​```</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这是一个多引号注释</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>用于注释多行</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>···</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>print<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello china\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>运算符</strong></p>\n<p><strong>算术运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th><code>&gt;</code></th>\n<th>大于</th>\n<th><code>2 &gt; 1</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&gt;=</code></td>\n<td>大于等于</td>\n<td><code>2 &gt;= 4</code></td>\n</tr>\n<tr>\n<td><code>&lt;</code></td>\n<td>小于</td>\n<td><code>1 &lt; 2</code></td>\n</tr>\n<tr>\n<td><code>&lt;=</code></td>\n<td>小于等于</td>\n<td><code>5 &lt;= 2</code></td>\n</tr>\n<tr>\n<td><code>==</code></td>\n<td>等于</td>\n<td><code>3 == 4</code></td>\n</tr>\n<tr>\n<td><code>!=</code></td>\n<td>不等于</td>\n<td><code>3 != 5</code></td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 12</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0.75</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 8</span></pre></td></tr></table></figure><p><strong>比较运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th><code>and</code></th>\n<th>与</th>\n<th><code>(3 &gt; 2) and (3 &lt; 5)</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>or</code></td>\n<td>或</td>\n<td><code>(1 &gt; 3) or (9 &lt; 2)</code></td>\n</tr>\n<tr>\n<td><code>not</code></td>\n<td>非</td>\n<td><code>not (2 &gt; 1)</code></td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">>=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">!=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span></pre></td></tr></table></figure><p><strong>逻辑运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th><code>and</code></th>\n<th>与</th>\n<th style=\"text-align:center\"><code>(3 &gt; 2) and (3 &lt; 5)</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>or</code></td>\n<td>或</td>\n<td style=\"text-align:center\"><code>(1 &gt; 3) or (9 &lt; 2)</code></td>\n</tr>\n<tr>\n<td><code>not</code></td>\n<td>非</td>\n<td style=\"text-align:center\"><code>not (2 &gt; 1)</code></td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>on</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span></pre></td></tr></table></figure><p><strong>位运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th><code>~</code></th>\n<th>按位取反</th>\n<th><code>~4</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&amp;</code></td>\n<td>按位与</td>\n<td><code>4 &amp; 5</code></td>\n</tr>\n<tr>\n<td><code>   |</code></td>\n<td>按位或</td>\n</tr>\n<tr>\n<td><code>^</code></td>\n<td>按位异或</td>\n<td><code>4 ^ 5</code></td>\n</tr>\n<tr>\n<td><code>&lt;&lt;</code></td>\n<td>左移</td>\n<td><code>4 &lt;&lt; 2</code></td>\n</tr>\n<tr>\n<td><code>&gt;&gt;</code></td>\n<td>右移</td>\n<td><code>4 &gt;&gt; 2</code></td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b100</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b101</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">~</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># -0b101 -5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b100 4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b101 5</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">^</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">^</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b10000 16</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1 1</span></pre></td></tr></table></figure><p><strong>三元运算符</strong></p>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    small <span class=\"token operator\">=</span> x</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    small <span class=\"token operator\">=</span> y</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>small<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 4</span></pre></td></tr></table></figure><p><strong>其他运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th><code>in</code></th>\n<th>存在</th>\n<th><code>'A' in ['A', 'B', 'C']</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>not in</code></td>\n<td>不存在</td>\n<td><code>'h' not in ['A', 'B', 'C']</code></td>\n</tr>\n<tr>\n<td><code>is</code></td>\n<td>是</td>\n<td><code>&quot;hello&quot; is &quot;hello&quot;</code></td>\n</tr>\n<tr>\n<td><code>not is</code></td>\n<td>不是</td>\n<td><code>&quot;hello&quot; is not &quot;hello&quot;</code></td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>letters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token string\">'A'</span> <span class=\"token keyword\">in</span> letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span> <span class=\"token operator\">+</span> <span class=\"token string\">' exists'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token string\">'h'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> letters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span> <span class=\"token operator\">+</span> <span class=\"token string\">' not exists'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># A exists</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># h not exists</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False False</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True False</span></pre></td></tr></table></figure><p>注意：</p>\n<ul>\n<li>is, is not 对比的是两个变量的内存地址</li>\n<li>==, != 对比的是两个变量的值</li>\n<li>比较的两个变量，指向的都是地址不可变的类型（str 等），那么 is，is not 和 ==，！= 是完全等价的。</li>\n<li>对比的两个变量，指向的是地址可变的类型（list，dict，tuple 等），则两者是有区别的。</li>\n</ul>\n<p><strong>运算符的优先级</strong></p>\n<table>\n<thead>\n<tr>\n<th>**</th>\n<th>指数（最高优先级）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>~±</td>\n<td>按位翻转，一元加号和减号</td>\n</tr>\n<tr>\n<td>* / % //</td>\n<td>乘，除，取模和取整除）</td>\n</tr>\n<tr>\n<td>+ -</td>\n<td>加法减法</td>\n</tr>\n<tr>\n<td>&gt;&gt; &lt;&lt;</td>\n<td>右移，左移运算符</td>\n</tr>\n<tr>\n<td>&amp;</td>\n<td>位‘AND’</td>\n</tr>\n<tr>\n<td>^|</td>\n<td>位运算符</td>\n</tr>\n<tr>\n<td>&lt;=&lt;&gt;&gt;=</td>\n<td>比较运算符</td>\n</tr>\n<tr>\n<td>&lt;&gt;==!=</td>\n<td>等于运算符</td>\n</tr>\n<tr>\n<td>=%=/=//=-=+=*=**=</td>\n<td>赋值运算符</td>\n</tr>\n<tr>\n<td>is is not</td>\n<td>身份运算符</td>\n</tr>\n<tr>\n<td>in not in</td>\n<td>成员运算符</td>\n</tr>\n<tr>\n<td>not and or</td>\n<td>逻辑运算符</td>\n</tr>\n</tbody>\n</table>\n<p>例子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># -9</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0.1111111111111111</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">/</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># -12.5</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token keyword\">and</span> <span class=\"token number\">4</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>变量和赋值</strong></p>\n</li>\n<li>\n<p>在使用变量之前，需要对其先赋值。</p>\n</li>\n<li>\n<p>变量名可以包括字母、数字、下划线、但变量名不能以数字开头。</p>\n</li>\n<li>\n<p>Python 变量名是大小写敏感的，foo != Foo。</p>\n<p>例子</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>first <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>second <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>third <span class=\"token operator\">=</span> first + second</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>print<span class=\"token punctuation\">(</span>third<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5</span></pre></td></tr></table></figure><p><strong>数据类型与转换</strong></p>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th>int</th>\n<th>整型  <code>&lt;class 'int'&gt;</code></th>\n<th><code>-876, 10</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>float</td>\n<td>浮点型 <code>&lt;class 'float'&gt;</code></td>\n<td><code>3.149, 11.11</code></td>\n</tr>\n<tr>\n<td>bool</td>\n<td>布尔型 <code>&lt;class 'bool'&gt;</code></td>\n<td><code>True, False</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>print<span class=\"token punctuation\">(</span>i,type<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">))</span>可以查看i的类型</pre></td></tr></table></figure><ul>\n<li>获取类型信息  <code>type(object)</code></li>\n</ul>\n<p>type ()` 不会认为子类是一种父类类型，不考虑继承关系。</p>\n<p>isinstance ()` 会认为子类是一种父类类型，考虑继承关系。</p>\n<p>如果要判断两个类型是否相同推荐使用  <code>isinstance()</code> 。</p>\n<p><strong>类型转换</strong></p>\n<ul>\n<li>转换为整型  <code>int(x, base=10)</code></li>\n<li>转换为字符串  <code>str(object='')</code></li>\n<li>转换为浮点型  <code>float(x)</code></li>\n</ul>\n</li>\n<li>\n<p><strong>print () 函数</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>print<span class=\"token punctuation\">(</span>*objects, <span class=\"token assign-left variable\">sep</span><span class=\"token operator\">=</span><span class=\"token string\">' '</span>, <span class=\"token assign-left variable\">end</span><span class=\"token operator\">=</span><span class=\"token string\">'<span class=\"token entity\" title=\"\\n\">\\n</span>'</span>, <span class=\"token assign-left variable\">file</span><span class=\"token operator\">=</span>sys.stdout, <span class=\"token assign-left variable\">flush</span><span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>将对象以字符串表示的方式格式化输出到流文件对象 file 里。其中所有非关键字参数都按 <code>str()</code>  方式进行转换为字符串输出；</li>\n<li>关键字参数 <code>sep</code>  是实现分隔符，比如多个参数输出时想要输出中间的分隔字符；</li>\n<li>关键字参数 <code>end</code>  是输出结束时的字符，默认是换行符 <code>\\n</code> ；</li>\n<li>关键字参数 <code>file</code>  是定义流输出的文件，可以是标准的系统输出 <code>sys.stdout</code> ，也可以重定义为别的文件；</li>\n<li>关键字参数 <code>flush</code>  是立即把内容输出到流文件，不作缓存。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>位运算</p>\n<ul>\n<li>\n<p>原码、反码和补码</p>\n</li>\n<li>\n<p>二进制有三种不同的表示形式：原码、反码和补码，计算机内部使用补码来表示。</p>\n<p><strong>原码</strong>：就是其二进制表示（注意，有一位符号位）。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">10</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">3</span></pre></td></tr></table></figure><p><strong>反码</strong>：正数的反码就是原码，负数的反码是符号位不变，其余位取反（对应正数按位取反）。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">00</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">3</span></pre></td></tr></table></figure><p><strong>补码</strong>：正数的补码就是原码，负数的补码是反码 + 1。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">01</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">3</span></pre></td></tr></table></figure></li>\n<li></li>\n<li>\n<p>按位非操作～</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">~</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">~</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr></table></figure></li>\n<li>\n<p>按位与操作 &amp;</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure></li>\n<li>\n<p>按位或操作 |</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure></li>\n<li>\n<p>按位异或操作 ^</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">^</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">^</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">^</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0</span> <span class=\"token operator\">^</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure></li>\n<li>\n<p>按位左移操作 &lt;&lt;</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">10</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">01</span> <span class=\"token number\">01</span> <span class=\"token number\">10</span> <span class=\"token number\">00</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">88</span></pre></td></tr></table></figure></li>\n<li>\n<p>按位右移操作 &gt;&gt;</p>\n</li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">10</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">2</span></pre></td></tr></table></figure></li>\n<li>\n<p>利用位运算实现快速计算</p>\n</li>\n<li>\n<p>通过  <code>&lt;&lt;</code> ， <code>&gt;&gt;</code>  快速计算 2 的倍数问题。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> 计算 n<span class=\"token operator\">*</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n <span class=\"token operator\">>></span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> 计算 n<span class=\"token operator\">/</span><span class=\"token number\">2</span>，负奇数的运算不可用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">&lt;&lt;</span> m <span class=\"token operator\">-</span><span class=\"token operator\">></span> 计算 n<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>m<span class=\"token punctuation\">)</span>，即乘以 <span class=\"token number\">2</span> 的 m 次方</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">>></span> m <span class=\"token operator\">-</span><span class=\"token operator\">></span> 计算 n<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>m<span class=\"token punctuation\">)</span>，即除以 <span class=\"token number\">2</span> 的 m 次方</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> n <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token operator\">^</span>n</pre></td></tr></table></figure><p>通过  <code>^</code>  快速交换两个整数。 通过  <code>^</code>  快速交换两个整数。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">^</span><span class=\"token operator\">=</span> b</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b <span class=\"token operator\">^</span><span class=\"token operator\">=</span> a</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a <span class=\"token operator\">^</span><span class=\"token operator\">=</span> b</pre></td></tr></table></figure><p>通过  <code>a &amp; (-a)</code>  快速获取 <code>a</code>  的最后为 1 位置的整数。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">01</span> <span class=\"token number\">01</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">10</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">01</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">11</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">11</span> <span class=\"token number\">11</span> <span class=\"token number\">00</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">2</span></pre></td></tr></table></figure></li>\n<li>\n<p>利用位运算实现整数集合</p>\n</li>\n<li>\n<p>一个数的二进制表示可以看作是一个集合（0 表示不在集合中，1 表示在集合中）。</p>\n<p>比如集合  <code>&#123;1, 3, 4, 8&#125;</code> ，可以表示成  <code>01 00 01 10 10</code>  而对应的位运算也就可以看作是对集合进行的操作。</p>\n<p>元素与集合的操作：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>i<span class=\"token punctuation\">)</span>  <span class=\"token operator\">-</span><span class=\"token operator\">></span> 把 i 插入到集合中</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> 把 i 从集合中删除</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>i<span class=\"token punctuation\">)</span>  <span class=\"token operator\">-</span><span class=\"token operator\">></span> 判断 i 是否属于该集合（零不属于，非零属于）</pre></td></tr></table></figure><p>集合之间的操作：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a 补   <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">~</span>a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a 交 b <span class=\"token operator\">-</span><span class=\"token operator\">></span> a <span class=\"token operator\">&amp;</span> b</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a 并 b <span class=\"token operator\">-</span><span class=\"token operator\">></span> a <span class=\"token operator\">|</span> b</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a 差 b <span class=\"token operator\">-</span><span class=\"token operator\">></span> a <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>注意：整数在内存中是以补码的形式存在的，输出自然也是按照补码输出。</p>\n<p>【例子】 Python 的 <code>bin()</code>  输出。</p>\n<p>[37]:</p>\n<pre><code>print(bin(3))  # 0b11\nprint(bin(-3))  # -0b11\n\nprint(bin(-3 &amp; 0xffffffff))  \n# 0b11111111111111111111111111111101\n\nprint(bin(0xfffffffd))       \n# 0b11111111111111111111111111111101\n\nprint(0xfffffffd)  # 4294967293\n</code></pre>\n</li>\n<li>\n<p>Python 中 <code>bin</code>  一个负数（十进制表示），输出的是它的原码的二进制表示加上个负号，巨坑。</p>\n</li>\n<li>\n<p>Python 中的整型是补码形式存储的。</p>\n</li>\n<li>\n<p>Python 中整型是不限制长度的不会超范围溢出。</p>\n</li>\n</ul>\n<p>所以为了获得负数（十进制表示）的补码，需要手动将其和十六进制数 <code>0xffffffff</code>  进行按位与操作，再交给 <code>bin()</code>  进行输出，得到的才是负数的补码表示。</p>\n</li>\n<li>\n<p>条件语句</p>\n<ul>\n<li>\n<h2 id=\"if-语句\"><a class=\"markdownIt-Anchor\" href=\"#if-语句\">#</a> if 语句</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> expression<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    expr_true_suite</pre></td></tr></table></figure><ul>\n<li>\n<p>if 语句的  <code>expr_true_suite</code>  代码块只有当条件表达式  <code>expression</code>  结果为真时才执行，否则将继续执行紧跟在该代码块后面的语句。</p>\n</li>\n<li>\n<p>单个 if 语句中的  <code>expression</code>  条件表达式可以通过布尔操作符  <code>and</code> ， <code>or</code>  和 <code>not</code>  实现多重条件判断。</p>\n</li>\n<li>\n<p>【例子】</p>\n<p>[38]:</p>\n<pre><code>if 2 &gt; 1 and not 2 &gt; 3:\n    print('Correct Judgement!')\n\n# Correct Judgement!\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<h2 id=\"2-if-else-语句\"><a class=\"markdownIt-Anchor\" href=\"#2-if-else-语句\">#</a> 2. if - else 语句</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> expression<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    expr_true_suite</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    expr_false_suite</pre></td></tr></table></figure><ul>\n<li>Python 提供与 if 搭配使用的 else，如果 if 语句的条件表达式结果布尔值为假，那么程序将执行 else 语句后的代码。</li>\n</ul>\n<p>【例子】</p>\n<p>[39]:</p>\n<pre><code>temp = input(&quot;猜一猜小姐姐想的是哪个数字？&quot;)\nguess = int(temp) # input 函数将接收的任何数据类型都默认为 str。\nif guess == 666:\n    print(&quot;你太了解小姐姐的心思了！&quot;)\n    print(&quot;哼，猜对也没有奖励！&quot;)\nelse:\n    print(&quot;猜错了，小姐姐现在心里想的是666！&quot;)\nprint(&quot;游戏结束，不玩儿啦！&quot;)\n猜一猜小姐姐想的是哪个数字？666\n你太了解小姐姐的心思了！\n哼，猜对也没有奖励！\n游戏结束，不玩儿啦！\n</code></pre>\n<p><code>if</code>  语句支持嵌套，即在一个 <code>if</code>  语句中嵌入另一个 <code>if</code>  语句，从而构成不同层次的选择结构。</p>\n<p>【例子】Python 使用缩进而不是大括号来标记代码块边界，因此要特别注意 <code>else</code>  的悬挂问题。</p>\n<p>[40]:</p>\n<pre><code>hi = 6\nif hi &gt; 2:\n    if hi &gt; 7:\n        print('好棒!好棒!')\nelse:\n    print('切~')\n\n# 无输出\n</code></pre>\n<p>【例子】</p>\n<p>[41]:</p>\n<pre><code>temp = input(&quot;猜一猜小姐姐想的是哪个数字？&quot;)\nguess = int(temp)\nif guess &gt; 8:\n    print(&quot;大了，大了&quot;)\nelse:\n    if guess == 8:\n        print(&quot;你太了解小姐姐的心思了！&quot;)\n        print(&quot;哼，猜对也没有奖励！&quot;)\n    else:\n        print(&quot;小了，小了&quot;)\nprint(&quot;游戏结束，不玩儿啦！&quot;)\n猜一猜小姐姐想的是哪个数字？8\n你太了解小姐姐的心思了！\n哼，猜对也没有奖励！\n游戏结束，不玩儿啦！\n</code></pre>\n<h2 id=\"3-if-elif-else-语句\"><a class=\"markdownIt-Anchor\" href=\"#3-if-elif-else-语句\">#</a> 3. if - elif - else 语句</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> expression1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    expr1_true_suite</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">elif</span> expression2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    expr2_true_suite</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">elif</span> expressionN<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    exprN_true_suite</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    expr_false_suite</pre></td></tr></table></figure><ul>\n<li>elif 语句即为 else if，用来检查多个表达式是否为真，并在为真时执行特定代码块中的代码。</li>\n</ul>\n<p>【例子】</p>\n<p>[42]:</p>\n<pre><code>temp = input('请输入成绩:')\nsource = int(temp)\nif 100 &gt;= source &gt;= 90:\n    print('A')\nelif 90 &gt; source &gt;= 80:\n    print('B')\nelif 80 &gt; source &gt;= 60:\n    print('C')\nelif 60 &gt; source &gt;= 0:\n    print('D')\nelse:\n    print('输入错误！')\n请输入成绩:99\nA\n</code></pre>\n<h2 id=\"4-assert-关键词\"><a class=\"markdownIt-Anchor\" href=\"#4-assert-关键词\">#</a> 4. assert 关键词</h2>\n<ul>\n<li><code>assert</code>  这个关键词我们称之为 “断言”，当这个关键词后边的条件为 False 时，程序自动崩溃并抛出 <code>AssertionError</code>  的异常。</li>\n</ul>\n<p>【例子】</p>\n<p>[ ]:</p>\n<pre><code>my_list = ['lsgogroup']\nmy_list.pop(0)\nassert len(my_list) &gt; 0\n\n# AssertionError\n</code></pre>\n<p>【例子】在进行单元测试时，可以用来在程序中置入检查点，只有条件为 True 才能让程序正常工作。</p>\n<p>[ ]:</p>\n<pre><code>assert 3 &gt; 7\n\n# AssertionError\n</code></pre>\n<h1 id=\"循环语句\"><a class=\"markdownIt-Anchor\" href=\"#循环语句\">#</a> 循环语句</h1>\n<h2 id=\"1-while-循环\"><a class=\"markdownIt-Anchor\" href=\"#1-while-循环\">#</a> 1. while 循环</h2>\n<p><code>while</code>  语句最基本的形式包括一个位于顶部的布尔表达式，一个或多个属于 <code>while</code>  代码块的缩进语句。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> 布尔表达式<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码块</pre></td></tr></table></figure><p><code>while</code>  循环的代码块会一直循环执行，直到布尔表达式的值为布尔假。</p>\n<p>如果布尔表达式不带有 <code>&lt;、&gt;、==、！=、in、not in</code>  等运算符，仅仅给出数值之类的条件，也是可以的。当 <code>while</code>  后写入一个非零整数时，视为真值，执行循环体；写入 <code>0</code>  时，视为假值，不执行循环体。也可以写入 <code>str、list</code>  或任何序列，长度非零则视为真值，执行循环体；否则视为假值，不执行循环体。</p>\n<p>【例子】</p>\n<p>[44]:</p>\n<pre><code>count = 0\nwhile count &lt; 3:\n    temp = input(&quot;猜一猜小姐姐想的是哪个数字？&quot;)\n    guess = int(temp)\n    if guess &gt; 8:\n        print(&quot;大了，大了&quot;)\n    else:\n        if guess == 8:\n            print(&quot;你太了解小姐姐的心思了！&quot;)\n            print(&quot;哼，猜对也没有奖励！&quot;)\n            count = 3\n        else:\n            print(&quot;小了，小了&quot;)\n    count = count + 1\nprint(&quot;游戏结束，不玩儿啦！&quot;)\n猜一猜小姐姐想的是哪个数字？8\n你太了解小姐姐的心思了！\n哼，猜对也没有奖励！\n游戏结束，不玩儿啦！\n</code></pre>\n<p>【例子】布尔表达式返回 0，循环终止。</p>\n<p>[45]:</p>\n<pre><code>string = 'abcd'\nwhile string:\n    print(string)\n    string = string[1:]\n\n# abcd\n# bcd\n# cd\n# d\nabcd\nbcd\ncd\nd\n</code></pre>\n<hr>\n<h2 id=\"2-while-else-循环\"><a class=\"markdownIt-Anchor\" href=\"#2-while-else-循环\">#</a> 2. while - else 循环</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> 布尔表达式<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码块</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    代码块</pre></td></tr></table></figure><p>当 <code>while</code>  循环正常执行完的情况下，执行 <code>else</code>  输出，如果 <code>while</code>  循环中执行了跳出循环的语句，比如  <code>break</code> ，将不执行 <code>else</code>  代码块的内容。</p>\n<p>【例子】</p>\n<p>[46]:</p>\n<pre><code>count = 0\nwhile count &lt; 5:\n    print(&quot;%d is  less than 5&quot; % count)\n    count = count + 1\nelse:\n    print(&quot;%d is not less than 5&quot; % count)\n    \n# 0 is  less than 5\n# 1 is  less than 5\n# 2 is  less than 5\n# 3 is  less than 5\n# 4 is  less than 5\n# 5 is not less than 5\n0 is  less than 5\n1 is  less than 5\n2 is  less than 5\n3 is  less than 5\n4 is  less than 5\n5 is not less than 5\n</code></pre>\n<p>【例子】</p>\n<p>[47]:</p>\n<pre><code>count = 0\nwhile count &lt; 5:\n    print(&quot;%d is  less than 5&quot; % count)\n    count = 6\n    break\nelse:\n    print(&quot;%d is not less than 5&quot; % count)\n\n# 0 is  less than 5\n0 is  less than 5\n</code></pre>\n<hr>\n<h2 id=\"3-for-循环\"><a class=\"markdownIt-Anchor\" href=\"#3-for-循环\">#</a> 3. for 循环</h2>\n<p><code>for</code>  循环是迭代循环，在 Python 中相当于一个通用的序列迭代器，可以遍历任何有序序列，如 <code>str、list、tuple</code>  等，也可以遍历任何可迭代对象，如 <code>dict</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> 迭代变量 <span class=\"token keyword\">in</span> 可迭代对象<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码块</pre></td></tr></table></figure><p>每次循环，迭代变量被设置为可迭代对象的当前元素，提供给代码块使用。</p>\n<p>【例子】</p>\n<p>[48]:</p>\n<pre><code>for i in 'ILoveLSGO':\n    print(i, end=' ')  # 不换行输出\n\n# I L o v e L S G O\nI L o v e L S G O \n</code></pre>\n<p>【例子】</p>\n<p>[49]:</p>\n<pre><code>member = ['张三', '李四', '刘德华', '刘六', '周润发']\nfor each in member:\n    print(each)\n\n# 张三\n# 李四\n# 刘德华\n# 刘六\n# 周润发\n\nfor i in range(len(member)):\n    print(member[i])\n\n# 张三\n# 李四\n# 刘德华\n# 刘六\n# 周润发\n张三\n李四\n刘德华\n刘六\n周润发\n张三\n李四\n刘德华\n刘六\n周润发\n</code></pre>\n<p>【例子】</p>\n<p>[50]:</p>\n<pre><code>dic = &#123;'a': 1, 'b': 2, 'c': 3, 'd': 4&#125;\n\nfor key, value in dic.items():\n    print(key, value, sep=':', end=' ')\n    \n# a:1 b:2 c:3 d:4 \na:1 b:2 c:3 d:4 \n</code></pre>\n<p>【例子】</p>\n<p>[51]:</p>\n<pre><code>dic = &#123;'a': 1, 'b': 2, 'c': 3, 'd': 4&#125;\n\nfor key in dic.keys():\n    print(key, end=' ')\n    \n# a b c d \na b c d \n</code></pre>\n<p>【例子】</p>\n<p>[52]:</p>\n<pre><code>dic = &#123;'a': 1, 'b': 2, 'c': 3, 'd': 4&#125;\n\nfor value in dic.values():\n    print(value, end=' ')\n    \n# 1 2 3 4\n1 2 3 4 \n</code></pre>\n<hr>\n<h2 id=\"4-for-else-循环\"><a class=\"markdownIt-Anchor\" href=\"#4-for-else-循环\">#</a> 4. for - else 循环</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> 迭代变量 <span class=\"token keyword\">in</span> 可迭代对象<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码块</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    代码块</pre></td></tr></table></figure><p>当 <code>for</code>  循环正常执行完的情况下，执行 <code>else</code>  输出，如果 <code>for</code>  循环中执行了跳出循环的语句，比如  <code>break</code> ，将不执行 <code>else</code>  代码块的内容，与 <code>while - else</code>  语句一样。</p>\n<p>【例子】</p>\n<p>[53]:</p>\n<pre><code>for num in range(10, 20):  # 迭代 10 到 20 之间的数字\n    for i in range(2, num):  # 根据因子迭代\n        if num % i == 0:  # 确定第一个因子\n            j = num / i  # 计算第二个因子\n            print('%d 等于 %d * %d' % (num, i, j))\n            break  # 跳出当前循环\n    else:  # 循环的 else 部分\n        print(num, '是一个质数')\n\n# 10 等于 2 * 5\n# 11 是一个质数\n# 12 等于 2 * 6\n# 13 是一个质数\n# 14 等于 2 * 7\n# 15 等于 3 * 5\n# 16 等于 2 * 8\n# 17 是一个质数\n# 18 等于 2 * 9\n# 19 是一个质数\n10 等于 2 * 5\n11 是一个质数\n12 等于 2 * 6\n13 是一个质数\n14 等于 2 * 7\n15 等于 3 * 5\n16 等于 2 * 8\n17 是一个质数\n18 等于 2 * 9\n19 是一个质数\n</code></pre>\n<hr>\n<h2 id=\"5-range-函数\"><a class=\"markdownIt-Anchor\" href=\"#5-range-函数\">#</a> 5. range () 函数</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> stop<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> step<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>这个 BIF（Built-in functions）有三个参数，其中用中括号括起来的两个表示这两个参数是可选的。</li>\n<li><code>step=1</code>  表示第三个参数的默认值是 1。</li>\n<li><code>range</code>  这个 BIF 的作用是生成一个从 <code>start</code>  参数的值开始到 <code>stop</code>  参数的值结束的数字序列，该序列包含 <code>start</code>  的值但不包含 <code>stop</code>  的值。</li>\n</ul>\n<p>【例子】</p>\n<p>[54]:</p>\n<pre><code>for i in range(2, 9):  # 不包含9\n    print(i)\n\n# 2\n# 3\n# 4\n# 5\n# 6\n# 7\n# 8\n2\n3\n4\n5\n6\n7\n8\n</code></pre>\n<p>【例子】</p>\n<p>[55]:</p>\n<pre><code>for i in range(1, 10, 2):\n    print(i)\n\n# 1\n# 3\n# 5\n# 7\n# 9\n1\n3\n5\n7\n9\n</code></pre>\n<hr>\n<h2 id=\"6-enumerate函数\"><a class=\"markdownIt-Anchor\" href=\"#6-enumerate函数\">#</a> 6. enumerate () 函数</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>sequence<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>sequence：一个序列、迭代器或其他支持迭代对象。</li>\n<li>start：下标起始位置。</li>\n<li>返回 enumerate (枚举) 对象</li>\n</ul>\n<p>【例子】</p>\n<p>[56]:</p>\n<pre><code>seasons = ['Spring', 'Summer', 'Fall', 'Winter']\nlst = list(enumerate(seasons))\nprint(lst)\n# [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]\nlst = list(enumerate(seasons, start=1))  # 下标从 1 开始\nprint(lst)\n# [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]\n[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]\n[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]\n</code></pre>\n<p><code>enumerate()</code>  与 for 循环的结合使用。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    do something <span class=\"token keyword\">with</span> a</pre></td></tr></table></figure><p>用  <code>enumerate(A)</code>  不仅返回了  <code>A</code>  中的元素，还顺便给该元素一个索引值 (默认从 0 开始)。此外，用  <code>enumerate(A, j)</code>  还可以确定索引起始值为  <code>j</code> 。</p>\n<p>【例子】</p>\n<p>[57]:</p>\n<pre><code>languages = ['Python', 'R', 'Matlab', 'C++']\nfor language in languages:\n    print('I love', language)\nprint('Done!')\n# I love Python\n# I love R\n# I love Matlab\n# I love C++\n# Done!\n\n\nfor i, language in enumerate(languages, 2):\n    print(i, 'I love', language)\nprint('Done!')\n# 2 I love Python\n# 3 I love R\n# 4 I love Matlab\n# 5 I love C++\n# Done!\nI love Python\nI love R\nI love Matlab\nI love C++\nDone!\n2 I love Python\n3 I love R\n4 I love Matlab\n5 I love C++\nDone!\n</code></pre>\n<hr>\n<h2 id=\"7-break-语句\"><a class=\"markdownIt-Anchor\" href=\"#7-break-语句\">#</a> 7. break 语句</h2>\n<p><code>break</code>  语句可以跳出当前所在层的循环。</p>\n<p>【例子】</p>\n<p>[59]:</p>\n<pre><code>import random\nsecret = random.randint(1, 10) #[1,10]之间的随机数\n\nwhile True:\n    temp = input(&quot;猜一猜小姐姐想的是哪个数字？&quot;)\n    guess = int(temp)\n    if guess &gt; secret:\n        print(&quot;大了，大了&quot;)\n    else:\n        if guess == secret:\n            print(&quot;你太了解小姐姐的心思了！&quot;)\n            print(&quot;哼，猜对也没有奖励！&quot;)\n            break\n        else:\n            print(&quot;小了，小了&quot;)\nprint(&quot;游戏结束，不玩儿啦！&quot;)\n猜一猜小姐姐想的是哪个数字？8\n你太了解小姐姐的心思了！\n哼，猜对也没有奖励！\n游戏结束，不玩儿啦！\n</code></pre>\n<hr>\n<h2 id=\"8-continue-语句\"><a class=\"markdownIt-Anchor\" href=\"#8-continue-语句\">#</a> 8. continue 语句</h2>\n<p><code>continue</code>  终止本轮循环并开始下一轮循环。</p>\n<p>【例子】</p>\n<p>[60]:</p>\n<pre><code>for i in range(10):\n    if i % 2 != 0:\n        print(i)\n        continue\n    i += 2\n    print(i)\n\n# 2\n# 1\n# 4\n# 3\n# 6\n# 5\n# 8\n# 7\n# 10\n# 9\n2\n1\n4\n3\n6\n5\n8\n7\n10\n9\n</code></pre>\n<hr>\n<h2 id=\"9-pass-语句\"><a class=\"markdownIt-Anchor\" href=\"#9-pass-语句\">#</a> 9. pass 语句</h2>\n<p><code>pass</code>  语句的意思是 “不做任何事”，如果你在需要有语句的地方不写任何语句，那么解释器会提示出错，而  <code>pass</code>  语句就是用来解决这些问题的。</p>\n<p>【例子】</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">a_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># SyntaxError: unexpected EOF while parsing</span></pre></td></tr></table></figure><p>【例子】</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">a_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><p><code>pass</code>  是空语句，不做任何操作，只起到占位的作用，其作用是为了保持程序结构的完整性。尽管 <code>pass</code>  语句不做任何操作，但如果暂时不确定要在一个位置放上什么样的代码，可以先放置一个 <code>pass</code>  语句，让代码可以正常运行。</p>\n<hr>\n<h2 id=\"10-推导式\"><a class=\"markdownIt-Anchor\" href=\"#10-推导式\">#</a> 10. 推导式</h2>\n<p><strong>列表推导式</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span> expr <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> collection <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> condition<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>【例子】</p>\n<p>[61]:</p>\n<pre><code>x = [-4, -2, 0, 2, 4]\ny = [a * 2 for a in x]\nprint(y)\n# [-8, -4, 0, 4, 8]\n[-8, -4, 0, 4, 8]\n</code></pre>\n<p>【例子】</p>\n<p>[63]:</p>\n<pre><code>x = [i ** 2 for i in range(1, 10)]\nprint(x)\n# [1, 4, 9, 16, 25, 36, 49, 64, 81]\n[1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre>\n<p>【例子】</p>\n<p>[64]:</p>\n<pre><code>x = [(i, i ** 2) for i in range(6)]\nprint(x)\n\n# [(0, 0), (1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]\n[(0, 0), (1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]\n</code></pre>\n<p>【例子】</p>\n<p>[65]:</p>\n<pre><code>x = [i for i in range(100) if (i % 2) != 0 and (i % 3) == 0]\nprint(x)\n\n# [3, 9, 15, 21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99]\n[3, 9, 15, 21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99]\n</code></pre>\n<p>【例子】</p>\n<p>[66]:</p>\n<pre><code>a = [(i, j) for i in range(0, 3) for j in range(0, 3)]\nprint(a)\n\n# [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n</code></pre>\n<p>【例子】</p>\n<p>[67]:</p>\n<pre><code>x = [[i, j] for i in range(0, 3) for j in range(0, 3)]\nprint(x)\n# [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]\n\nx[0][0] = 10\nprint(x)\n# [[10, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]\n[[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]\n[[10, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]\n</code></pre>\n<p>【例子】</p>\n<p>[68]:</p>\n<pre><code>a = [(i, j) for i in range(0, 3) if i &lt; 1 for j in range(0, 3) if j &gt; 1]\nprint(a)\n\n# [(0, 2)]\n[(0, 2)]\n</code></pre>\n<p><strong>元组推导式</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span> expr <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> collection <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> condition<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>【例子】</p>\n<p>[69]:</p>\n<pre><code>a = (x for x in range(10))\nprint(a)\n\n# &lt;generator object &lt;genexpr&gt; at 0x0000025BE511CC48&gt;\n\nprint(tuple(a))\n\n# (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n&lt;generator object &lt;genexpr&gt; at 0x0000014CEC2E28B8&gt;\n(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n</code></pre>\n<p><strong>字典推导式</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> key_expr<span class=\"token punctuation\">:</span> value_expr <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> collection <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> condition<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>【例子】</p>\n<p>[70]:</p>\n<pre><code>b = &#123;i: i % 2 == 0 for i in range(10) if i % 3 == 0&#125;\nprint(b)\n# &#123;0: True, 3: False, 6: True, 9: False&#125;\n&#123;0: True, 3: False, 6: True, 9: False&#125;\n</code></pre>\n<p><strong>集合推导式</strong></p>\n<pre><code>&#123; expr for value in collection [if condition] &#125;\n</code></pre>\n<p>【例子】</p>\n<p>[71]:</p>\n<pre><code>c = &#123;i for i in [1, 2, 3, 4, 5, 5, 6, 4, 3, 2, 1]&#125;\nprint(c)\n# &#123;1, 2, 3, 4, 5, 6&#125;\n&#123;1, 2, 3, 4, 5, 6&#125;\n</code></pre>\n<p><strong>其它</strong></p>\n<ul>\n<li><code>next(iterator[, default])</code>  Return the next item from the iterator. If default is given and the iterator is exhausted, it is returned instead of raising StopIteration.</li>\n</ul>\n<p>【例子】</p>\n<p>[72]:</p>\n<pre><code>e = (i for i in range(10))\nprint(e)\n# &lt;generator object &lt;genexpr&gt; at 0x0000007A0B8D01B0&gt;\n\nprint(next(e))  # 0\nprint(next(e))  # 1\n\nfor each in e:\n    print(each, end=' ')\n\n# 2 3 4 5 6 7 8 9\n&lt;generator object &lt;genexpr&gt; at 0x0000014CEC389C78&gt;\n0\n1\n2 3 4 5 6 7 8 9 \n</code></pre>\n<p>【例子】</p>\n<p>[73]:</p>\n<pre><code>s = sum([i for i in range(101)])\nprint(s)  # 5050\ns = sum((i for i in range(101)))\nprint(s)  # 5050\n5050\n5050\n</code></pre>\n<h1 id=\"异常处理\"><a class=\"markdownIt-Anchor\" href=\"#异常处理\">#</a> 异常处理</h1>\n<p>异常就是运行期检测到的错误。计算机语言针对可能出现的错误定义了异常类型，某种错误引发对应的异常时，异常处理程序将被启动，从而恢复程序的正常运行。</p>\n<h2 id=\"1-python-标准异常总结\"><a class=\"markdownIt-Anchor\" href=\"#1-python-标准异常总结\">#</a> 1. Python 标准异常总结</h2>\n<ul>\n<li>BaseException：所有异常的 <strong>基类</strong></li>\n<li>Exception：常规异常的 <strong>基类</strong></li>\n<li>StandardError：所有的内建标准异常的基类</li>\n<li>ArithmeticError：所有数值计算异常的基类</li>\n<li>FloatingPointError：浮点计算异常</li>\n<li>OverflowError：数值运算超出最大限制</li>\n<li>ZeroDivisionError：除数为零</li>\n<li>AssertionError：断言语句（assert）失败</li>\n<li>AttributeError：尝试访问未知的对象属性</li>\n<li>EOFError：没有内建输入，到达 EOF 标记</li>\n<li>EnvironmentError：操作系统异常的基类</li>\n<li>IOError：输入 / 输出操作失败</li>\n<li>OSError：操作系统产生的异常（例如打开一个不存在的文件）</li>\n<li>WindowsError：系统调用失败</li>\n<li>ImportError：导入模块失败的时候</li>\n<li>KeyboardInterrupt：用户中断执行</li>\n<li>LookupError：无效数据查询的基类</li>\n<li>IndexError：索引超出序列的范围</li>\n<li>KeyError：字典中查找一个不存在的关键字</li>\n<li>MemoryError：内存溢出（可通过删除对象释放内存）</li>\n<li>NameError：尝试访问一个不存在的变量</li>\n<li>UnboundLocalError：访问未初始化的本地变量</li>\n<li>ReferenceError：弱引用试图访问已经垃圾回收了的对象</li>\n<li>RuntimeError：一般的运行时异常</li>\n<li>NotImplementedError：尚未实现的方法</li>\n<li>SyntaxError：语法错误导致的异常</li>\n<li>IndentationError：缩进错误导致的异常</li>\n<li>TabError：Tab 和空格混用</li>\n<li>SystemError：一般的解释器系统异常</li>\n<li>TypeError：不同类型间的无效操作</li>\n<li>ValueError：传入无效的参数</li>\n<li>UnicodeError：Unicode 相关的异常</li>\n<li>UnicodeDecodeError：Unicode 解码时的异常</li>\n<li>UnicodeEncodeError：Unicode 编码错误导致的异常</li>\n<li>UnicodeTranslateError：Unicode 转换错误导致的异常</li>\n</ul>\n<p>异常体系内部有层次关系，Python 异常体系中的部分关系如下所示：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200710131404548.png\" alt=\"Image\"></p>\n<hr>\n<h2 id=\"2-python标准警告总结\"><a class=\"markdownIt-Anchor\" href=\"#2-python标准警告总结\">#</a> 2. Python 标准警告总结</h2>\n<ul>\n<li>Warning：警告的基类</li>\n<li>DeprecationWarning：关于被弃用的特征的警告</li>\n<li>FutureWarning：关于构造将来语义会有改变的警告</li>\n<li>UserWarning：用户代码生成的警告</li>\n<li>PendingDeprecationWarning：关于特性将会被废弃的警告</li>\n<li>RuntimeWarning：可疑的运行时行为 (runtime behavior) 的警告</li>\n<li>SyntaxWarning：可疑语法的警告</li>\n<li>ImportWarning：用于在导入模块过程中触发的警告</li>\n<li>UnicodeWarning：与 Unicode 相关的警告</li>\n<li>BytesWarning：与字节或字节码相关的警告</li>\n<li>ResourceWarning：与资源使用相关的警告</li>\n</ul>\n<hr>\n<h2 id=\"3-try-except-语句\"><a class=\"markdownIt-Anchor\" href=\"#3-try-except-语句\">#</a> 3. try - except 语句</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    检测范围</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">[</span><span class=\"token keyword\">as</span> reason<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    出现异常后的处理代码</pre></td></tr></table></figure><p>try 语句按照如下方式工作：</p>\n<ul>\n<li>首先，执行 <code>try</code>  子句（在关键字 <code>try</code>  和关键字 <code>except</code>  之间的语句）</li>\n<li>如果没有异常发生，忽略 <code>except</code>  子句， <code>try</code>  子句执行后结束。</li>\n<li>如果在执行 <code>try</code>  子句的过程中发生了异常，那么 <code>try</code>  子句余下的部分将被忽略。如果异常的类型和 <code>except</code>  之后的名称相符，那么对应的 <code>except</code>  子句将被执行。最后执行 <code>try - except</code>  语句之后的代码。</li>\n<li>如果一个异常没有与任何的 <code>except</code>  匹配，那么这个异常将会传递给上层的 <code>try</code>  中。</li>\n</ul>\n<p>【例子】</p>\n<p>[2]:</p>\n<pre><code>try:\n    f = open('test.txt')\n    print(f.read())\n    f.close()\nexcept OSError:\n    print('打开文件出错')\n\n# 打开文件出错\n打开文件出错\n</code></pre>\n<p>【例子】</p>\n<p>[3]:</p>\n<pre><code>try:\n    f = open('test.txt')\n    print(f.read())\n    f.close()\nexcept OSError as error:\n    print('打开文件出错\\n原因是：' + str(error))\n\n# 打开文件出错\n# 原因是：[Errno 2] No such file or directory: 'test.txt'\n打开文件出错\n原因是：[Errno 2] No such file or directory: 'test.txt'\n</code></pre>\n<p>一个 <code>try</code>  语句可能包含多个 <code>except</code>  子句，分别来处理不同的特定的异常。最多只有一个分支会被执行。</p>\n<p>【例子】</p>\n<p>[4]:</p>\n<pre><code>try:\n    int(&quot;abc&quot;)\n    s = 1 + '1'\n    f = open('test.txt')\n    print(f.read())\n    f.close()\nexcept OSError as error:\n    print('打开文件出错\\n原因是：' + str(error))\nexcept TypeError as error:\n    print('类型出错\\n原因是：' + str(error))\nexcept ValueError as error:\n    print('数值出错\\n原因是：' + str(error))\n\n# 数值出错\n# 原因是：invalid literal for int() with base 10: 'abc'\n数值出错\n原因是：invalid literal for int() with base 10: 'abc'\n</code></pre>\n<p>【例子】</p>\n<p>[5]:</p>\n<pre><code>dict1 = &#123;'a': 1, 'b': 2, 'v': 22&#125;\ntry:\n    x = dict1['y']\nexcept LookupError:\n    print('查询错误')\nexcept KeyError:\n    print('键错误')\nelse:\n    print(x)\n\n# 查询错误\n查询错误\n</code></pre>\n<p><code>try-except-else</code>  语句尝试查询不在 <code>dict</code>  中的键值对，从而引发了异常。这一异常准确地说应属于 <code>KeyError</code> ，但由于 <code>KeyError</code>  是 <code>LookupError</code>  的子类，且将 <code>LookupError</code>  置于 <code>KeyError</code>  之前，因此程序优先执行该 <code>except</code>  代码块。所以，使用多个 <code>except</code>  代码块时，必须坚持对其规范排序，要从最具针对性的异常到最通用的异常。</p>\n<p>【例子】</p>\n<p>[6]:</p>\n<pre><code>dict1 = &#123;'a': 1, 'b': 2, 'v': 22&#125;\ntry:\n    x = dict1['y']\nexcept KeyError:\n    print('键错误')\nexcept LookupError:\n    print('查询错误')\nelse:\n    print(x)\n\n# 键错误\n键错误\n</code></pre>\n<p>【例子】一个  <code>except</code>  子句可以同时处理多个异常，这些异常将被放在一个括号里成为一个元组。</p>\n<p>[7]:</p>\n<pre><code>try:\n    s = 1 + '1'\n    int(&quot;abc&quot;)\n    f = open('test.txt')\n    print(f.read())\n    f.close()\nexcept (OSError, TypeError, ValueError) as error:\n    print('出错了！\\n原因是：' + str(error))\n\n# 出错了！\n# 原因是：unsupported operand type(s) for +: 'int' and 'str'\n出错了！\n原因是：unsupported operand type(s) for +: 'int' and 'str'\n</code></pre>\n<hr>\n<h2 id=\"4-try-except-finally-语句\"><a class=\"markdownIt-Anchor\" href=\"#4-try-except-finally-语句\">#</a> 4. try - except - finally 语句</h2>\n<p>try: 检测范围 except Exception [as reason]: 出现异常后的处理代码 finally: 无论如何都会被执行的代码</p>\n<p>不管 <code>try</code>  子句里面有没有发生异常， <code>finally</code>  子句都会执行。</p>\n<p>【例子】如果一个异常在 <code>try</code>  子句里被抛出，而又没有任何的 <code>except</code>  把它截住，那么这个异常会在 <code>finally</code>  子句执行后被抛出。</p>\n<p>[10]:</p>\n<pre><code>def divide(x, y):\n    try:\n        result = x / y\n        print(&quot;result is&quot;, result)\n    except ZeroDivisionError:\n        print(&quot;division by zero!&quot;)\n    finally:\n        print(&quot;executing finally clause&quot;)\n\n\ndivide(2, 1)\n# result is 2.0\n# executing finally clause\ndivide(2, 0)\n# division by zero!\n# executing finally clause\ndivide(&quot;2&quot;, &quot;1&quot;)\n# executing finally clause\n# TypeError: unsupported operand type(s) for /: 'str' and 'str'\nresult is 2.0\nexecuting finally clause\ndivision by zero!\nexecuting finally clause\n</code></pre>\n<hr>\n<h2 id=\"5-try-except-else-语句\"><a class=\"markdownIt-Anchor\" href=\"#5-try-except-else-语句\">#</a> 5. try - except - else 语句</h2>\n<p>如果在 <code>try</code>  子句执行时没有发生异常，Python 将执行 <code>else</code>  语句后的语句。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    检测范围</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    出现异常后的处理代码</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    如果没有异常执行这块代码</pre></td></tr></table></figure><p>使用 <code>except</code>  而不带任何异常类型，这不是一个很好的方式，我们不能通过该程序识别出具体的异常信息，因为它捕获所有的异常。</p>\n<p>try: 检测范围 except (Exception1 [, Exception2 [,…ExceptionN]]]): 发生以上多个异常中的一个，执行这块代码 else: 如果没有异常执行这块代码</p>\n<p>【例子】</p>\n<p>[12]:</p>\n<pre><code>try:\n    fh = open(&quot;testfile.txt&quot;, &quot;w&quot;)\n    fh.write(&quot;这是一个测试文件，用于测试异常!!&quot;)\nexcept IOError:\n    print(&quot;Error: 没有找到文件或读取文件失败&quot;)\nelse:\n    print(&quot;内容写入文件成功&quot;)\n    fh.close()\n\n# 内容写入文件成功\n内容写入文件成功\n</code></pre>\n<p>注意： <code>else</code>  语句的存在必须以 <code>except</code>  语句的存在为前提，在没有 <code>except</code>  语句的 <code>try</code>  语句中使用 <code>else</code>  语句，会引发语法错误。</p>\n<hr>\n<h2 id=\"6-raise语句\"><a class=\"markdownIt-Anchor\" href=\"#6-raise语句\">#</a> 6. raise 语句</h2>\n<p>Python 使用 <code>raise</code>  语句抛出一个指定的异常。</p>\n<p>【例子】</p>\n<p>[13]:</p>\n<pre><code>try:\n    raise NameError('HiThere')\nexcept NameError:\n    print('An exception flew by!')\n    \n# An exception flew by!\nAn exception flew by!\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/hello-world/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/hello-world/",
            "title": "Hello Hexo",
            "date_published": "2021-01-26T03:04:10.232Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/2020-1-26/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/2020-1-26/",
            "title": "2020-1-26",
            "date_published": "2021-01-26T02:55:39.000Z",
            "content_html": "<p>2020-1-26<br>\n 开发出了 Hexo 站点</p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/2020-1-26/",
            "url": "https://alanosy.github.io/2021/01/26/2020-1-26/",
            "title": "2020-1-26",
            "date_published": "2021-01-26T02:55:39.000Z",
            "content_html": "<p>2020-1-26<br>\n 开发出了 Hexo 站点</p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/",
            "title": "关于我们",
            "date_published": "2021-01-26T02:26:31.000Z",
            "content_html": "<p>本主题作者： Ruri Shimotsuki @優萌初華<br>\n本站主题链接： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">https://shoka.lostyu.me</span></p>\n<p>此站站主：Alan<br>\n 临近高考记录一下学习生涯<br>\n和自己的一些兴趣爱好<br>\n联系邮箱：Alanos@aliyun.com<br>\n 微信:fignet<br>\nQQ:9077584</p>\n<p>版权声明： 本站所有文章除特别声明外，均采用 (CC) BY-NC-SA 许可协议。转载请注明出处！</p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD/",
            "title": "特殊功能",
            "date_published": "2021-01-26T01:27:48.000Z",
            "content_html": "<p>links 链接块<br>\n本功能参考 NexT，基于 Hexo Tag 功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<p>使用 links 标签块，包围 yml 语法书写的内容，字段包括<br>\n site\t站点名称\t必填<br>\n owner\t管理员名字\t可选，默认为 site 的值<br>\n url\t\t站点链接\t必填<br>\n desc\t站点描述\t可选，默认为 url 的值<br>\n image\t站点图片\t可选，默认为 images/404.png<br>\ncolor\t方块颜色\t可选，默认为 #666</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼0--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼1--<span class=\"token operator\">></span></pre></td></tr></table></figure><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n<p>以上标签块里的内容，还可以保存到一个 yml 文件中，然后使用 linksfile 标签。<br>\n其中， path 位于 <root>/source 目录下。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼11--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼12--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>code 代码块</p>\n<p>使用 markdown-it-prism 进行代码高亮，支持显示行号、行高亮 mark 、命令行提示符 command 、代码块标题。</p>\n<p>基本格式： [language] [title] [url] [link text] [mark] [command]</p>\n<p>选项\t描述\t默认值<br>\n language</p>\n<p>支持的语言戳此<br>\n如果不需要代码高亮，但希望显示代码块样式，则设为 raw<br>\n 留空或设为 info ，将不显示代码高亮和代码块样式<br>\n null</p>\n<p>title\t代码块的标题文字\tnull<br>\nurl\t代码块标题右侧显示的链接\tnull<br>\nlink text\t上述链接显示的标题\tlink<br>\nmark</p>\n<p>行高亮显示，格式为 mark: 行号，行号开始 - 行号结束，其他行号 。<br>\n例如 mark:1,4-7,10 ，将高亮显示第 1、4、5、6、7、10 行</p>\n<p>null</p>\n<p>command</p>\n<p>命令行提示符，格式为 command:(“提示内容”: 行号，行号 ||“提示内容”: 行号开始 - 行号结束)<br>\n 例如 command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</p>\n<p>null</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>```java 行高亮 https://shoka.lostyu.me 参考链接 mark:1,6-7</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> java.util.Scanner<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Scanner <span class=\"token keyword\">in</span> <span class=\"token operator\">=</span> new Scanner <span class=\"token punctuation\">(</span>System.in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println <span class=\"token punctuation\">(</span>in.nextLine <span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>System.out.println <span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> + <span class=\"token string\">\"world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">pwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">ls</span> -la</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>total <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr-xr-x   <span class=\"token number\">2</span> chris  chris     <span class=\"token number\">11</span> Jan <span class=\"token number\">10</span> <span class=\"token number\">16</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr--r-x  <span class=\"token number\">45</span> chris  chris     <span class=\"token number\">92</span> Feb <span class=\"token number\">14</span> <span class=\"token number\">11</span>:10 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">444</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2013</span> backup</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">642</span> Jan <span class=\"token number\">17</span> <span class=\"token number\">14</span>:42 deploy</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"update\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">git</span> push</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> java.util.Scanner<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Scanner <span class=\"token keyword\">in</span> <span class=\"token operator\">=</span> new Scanner<span class=\"token punctuation\">(</span>System.in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>in.nextLine<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> + <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">pwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ls</span> -la</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>drwxr-xr-x   <span class=\"token number\">2</span> chris  chris     <span class=\"token number\">11</span> Jan <span class=\"token number\">10</span> <span class=\"token number\">16</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>drwxr--r-x  <span class=\"token number\">45</span> chris  chris     <span class=\"token number\">92</span> Feb <span class=\"token number\">14</span> <span class=\"token number\">11</span>:10 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">444</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2013</span> backup</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">642</span> Jan <span class=\"token number\">17</span> <span class=\"token number\">14</span>:42 deploy</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"update\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">git</span> push</pre></td></tr></table></figure><p>quiz 练习题与答案<br>\n这个功能是用来显示练习题的。<br>\n需要在 Front Matter 中添加 quiz: true ，以正确显示题型标签。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 练习题与答案</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>quiz: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1</span>. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 <span class=\"token punctuation\">&#123;</span>.quiz .true<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">2</span>. 有基类 <span class=\"token variable\"><span class=\"token variable\">`</span>SHAPE<span class=\"token variable\">`</span></span>，派生类 <span class=\"token variable\"><span class=\"token variable\">`</span>CIRCLE<span class=\"token variable\">`</span></span>，声明如下变量：  <span class=\"token punctuation\">&#123;</span>.quiz .multi<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ``<span class=\"token variable\"><span class=\"token variable\">`</span>cpp</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    SHAPE shape1,*p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    CIRCLE circle1,*q1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">`</span></span>`<span class=\"token variable\"><span class=\"token variable\">`</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    下列哪些项是 “派生类对象替换基类对象”。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - <span class=\"token variable\">`</span></span>p1<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>circle1<span class=\"token punctuation\">;</span><span class=\"token variable\"><span class=\"token variable\">`</span> <span class=\"token punctuation\">&#123;</span>.correct<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - <span class=\"token variable\">`</span></span>q1<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>shape1<span class=\"token punctuation\">;</span><span class=\"token variable\"><span class=\"token variable\">`</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    - <span class=\"token variable\">`</span></span>shape1<span class=\"token operator\">=</span>circle1<span class=\"token punctuation\">;</span><span class=\"token variable\"><span class=\"token variable\">`</span> <span class=\"token punctuation\">&#123;</span>.correct<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    - <span class=\"token variable\">`</span></span>circle1<span class=\"token operator\">=</span>shape1<span class=\"token punctuation\">;</span><span class=\"token variable\"><span class=\"token variable\">`</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.options<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">></span> - :heavy_check_mark: 令基类对象的指针指向派生类对象</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token operator\">></span> - :x: 派生类指针指向基类的引用</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token operator\">></span> - :heavy_check_mark: 派生类对象给基类对象赋值</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">></span> - :x: 基类对象给派生类对象赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>.options<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">3</span>. 下列叙述正确的是 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.gap<span class=\"token punctuation\">&#125;</span> 。 <span class=\"token punctuation\">&#123;</span>.quiz<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    - 虚函数只能定义成无参函数</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    - 虚函数不能有返回值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    - 能定义虚构造函数</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - A、B、C 都不对 <span class=\"token punctuation\">&#123;</span>.correct<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.options<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">10</span>. 如果定义 <span class=\"token variable\">`</span></span>int <span class=\"token assign-left variable\">e</span><span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span> double <span class=\"token assign-left variable\">f</span><span class=\"token operator\">=</span><span class=\"token number\">6.4</span>, <span class=\"token assign-left variable\">g</span><span class=\"token operator\">=</span><span class=\"token number\">8.9</span><span class=\"token punctuation\">;</span><span class=\"token variable\"><span class=\"token variable\">`</span>，则表达式 <span class=\"token variable\">`</span></span>f+int <span class=\"token punctuation\">(</span>e/3*int <span class=\"token punctuation\">(</span>f+g<span class=\"token punctuation\">)</span>/2<span class=\"token punctuation\">)</span>%4` 的值为 <span class=\"token punctuation\">[</span><span class=\"token number\">9.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.gap<span class=\"token punctuation\">&#125;</span>。 <span class=\"token punctuation\">&#123;</span>.quiz .fill<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token operator\">></span> 注意运算顺序和数据类型</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">8.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.mistake<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr>\n<h2 id=\"title-练习题与答案quiz-true\"><a class=\"markdownIt-Anchor\" href=\"#title-练习题与答案quiz-true\">#</a> title: 练习题与答案<br>\n quiz: true</h2>\n<ol>\n<li class=\"quiz true\">\n<p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。</p>\n</li>\n<li class=\"quiz multi\">\n<p>有基类  <code>SHAPE</code> ，派生类  <code>CIRCLE</code> ，声明如下变量： </p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>p1=&amp;circle1;</code> </li>\n<li><code>q1=&amp;shape1;</code></li>\n<li class=\"correct\"><code>shape1=circle1;</code> </li>\n<li><code>circle1=shape1;</code></li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>✔️ 令基类对象的指针指向派生类对象</li>\n<li>❌ 派生类指针指向基类的引用</li>\n<li>✔️ 派生类对象给基类对象赋值</li>\n<li>❌ 基类对象给派生类对象赋值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>下列叙述正确的是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li class=\"correct\">A、B、C 都不对</li>\n</ul>\n</li>\n<li class=\"quiz fill\">\n<p>如果定义  <code>int e=8; double f=6.4, g=8.9;</code> ，则表达式  <code>f+int (e/3*int (f+g)/2)%4</code>  的值为 <span class=\"gap\">9.4</span>。</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br>\n<span class=\"mistake\"> 8.4</span><br>\n 有基类 SHAPE ，派生类 CIRCLE ，声明如下变量：</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1,*p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1,*q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>使用说明<br>\n本功能基于 markdown-it-bracketed-spans 和 markdown-it-attrs</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>标签\t含义</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.quiz<span class=\"token punctuation\">&#125;</span>\t选择题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.quiz .multi<span class=\"token punctuation\">&#125;</span>\t多选题</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.quiz .true<span class=\"token punctuation\">&#125;</span>\t正确的判断题</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.quiz .false<span class=\"token punctuation\">&#125;</span>\t错误的判断题</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.quiz .fill<span class=\"token punctuation\">&#125;</span>\t填空题</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.gap<span class=\"token punctuation\">&#125;</span>\t空白下划线</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>答案内容<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.gap<span class=\"token punctuation\">&#125;</span>\t答案内容带下划线</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.options<span class=\"token punctuation\">&#125;</span>\tABCDE 选项</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.correct<span class=\"token punctuation\">&#125;</span>\t选择题的正确选项</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">></span>\t答案解析</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">8.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.mistake<span class=\"token punctuation\">&#125;</span>\t错题备注</pre></td></tr></table></figure><p>#emoji 绘文字</p>\n<p>本功能基于 markdown-it-emoji ，所有标签参考戳此</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:kissing_heart:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>:ring:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:notes:</pre></td></tr></table></figure><p>effects 文字特效<br>\n本功能基于 markdown-it-ins 、 markdown-it-bracketed-spans 和 markdown-it-attrs</p>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 波浪线 ++<span class=\"token punctuation\">&#123;</span>.wavy<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>++ 着重点 ++<span class=\"token punctuation\">&#123;</span>.dot<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>++ 紫色下划线 ++<span class=\"token punctuation\">&#123;</span>.primary<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>++ 绿色波浪线 ++<span class=\"token punctuation\">&#123;</span>.wavy .success<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>++ 黄色着重点 ++<span class=\"token punctuation\">&#123;</span>.dot .warning<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>~~ 删除线～～</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>~~ 红色删除线～～<span class=\"token punctuation\">&#123;</span>.danger<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">==</span> 荧光高亮 <span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>赤橙黄绿青蓝紫<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.rainbow<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>红色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.red<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>粉色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.pink<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>橙色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.orange<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>红色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.yellow<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>绿色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.green<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>靛青<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.aqua<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>蓝色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.blue<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>紫色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.purple<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>灰色<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.grey<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>快捷键 <span class=\"token punctuation\">[</span>Ctrl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.kbd<span class=\"token punctuation\">&#125;</span> + <span class=\"token punctuation\">[</span>C<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.kbd .red<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>H~2~0</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">29</span>^th^</pre></td></tr></table></figure><p>++ 下划线 ++<br>\n++ 波浪线 ++{.wavy}<br>\n++ 着重点 ++{.dot}<br>\n++ 紫色下划线 ++{.primary}<br>\n++ 绿色波浪线 ++{.wavy .success}<br>\n++ 黄色着重点 ++{.dot .warning}<br>\n~~ 删除线～～<br>\n~~ 红色删除线～～{.danger}<br>\n== 荧光高亮 ==<br>\n<span class=\"rainbow\"> 赤橙黄绿青蓝紫</span><br>\n<span class=\"red\">红色</span><br>\n<span class=\"pink\">粉色</span><br>\n<span class=\"orange\">橙色</span><br>\n<span class=\"yellow\">红色</span><br>\n<span class=\"green\">绿色</span><br>\n<span class=\"aqua\">靛青</span><br>\n<span class=\"blue\">蓝色</span><br>\n<span class=\"purple\">紫色</span><br>\n<span class=\"grey\">灰色</span><br>\n快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">C</span><br>\nH<sub>2</sub>0<br>\n29<sup>th</sup></p>\n<p>spoiler 隐藏文字<br>\n本功能基于 markdown-it-spoiler 和 markdown-it-attrs</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">!</span><span class=\"token operator\">!</span> 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">!</span><span class=\"token operator\">!</span> 模糊模糊模糊模糊模糊模糊！！<span class=\"token punctuation\">&#123;</span>.bulr<span class=\"token punctuation\">&#125;</span> ： 选中文字显示内容</pre></td></tr></table></figure><p>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容<br>\n！！模糊模糊模糊模糊模糊模糊！！{.bulr} ： 选中文字显示内容</p>\n<p>#label 标签块<br>\n本功能基于 markdown-it-bracketed-spans 和 markdown-it-attrs<br>\n 有以下颜色可选</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>default<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>primary<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .primary<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .info<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>:heavy_check_mark:success<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .success<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>warning<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .warning<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>:broken_heart:danger<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .danger<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"label\">default</span><br>\n<span class=\"label primary\">primary</span><br>\n<span class=\"label info\">info</span><br>\n<span class=\"label success\">✔️success</span><br>\n<span class=\"label warning\">warning</span><br>\n<span class=\"label danger\">💔danger</span></p>\n<p>note 提醒块<br>\n本功能基于 markdown-it-container<br>\n 标签为：</p>\n<p>开始行\t:::[风格颜色]<br>\n 结束行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:::default</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>默认默认</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>:::primary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>基本基本</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>提示提示</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>:::success</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>成功成功</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>:::warning</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>警告警告</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>:::danger no-icon</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>:::</pre></td></tr></table></figure><div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>危险危险</p>\n</div>\n<p>tab 标签卡<br>\n本功能基于 markdown-it-container<br>\n 标签为：</p>\n<p>开始行\t;;;[同一 ID] [标签名称]<br>\n 结束行\t;;;</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id1 卡片 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这里是卡片 <span class=\"token number\">1</span> 的内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>** 加粗 **</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>success<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .success<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼3--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id1 卡片 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>这里是卡片 <span class=\"token number\">2</span> 的内容</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id2 ②号标签卡片 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>这里是卡片 <span class=\"token number\">1</span> 的内容</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id2 ②号标签卡片 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>这里是卡片 <span class=\"token number\">2</span> 的内容</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><div class=\"tab\" data-id=\"id1\" data-title=\"卡片 1\">\n<p>这里是卡片 1 的内容<br>\n ** 加粗 **<br>\n<span class=\"label success\">success</span></p>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片 2\">\n<p>这里是卡片 2 的内容</p>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片 1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片 2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n<p>#collapse 折叠块<br>\n本功能基于 markdown-it-container<br>\n 标签为：</p>\n<p>开始行\t+++[风格颜色] [标题文字]<br>\n 结束行\t+++</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+++ 默认默认 这里是一段文字</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+++primary 紫色</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>参考信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+++info  蓝色</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id3 卡片 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里是卡片 <span class=\"token number\">1</span> 的内容</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>id3 卡片 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>这里是卡片 <span class=\"token number\">2</span> 的内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>+++success 绿色</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼5--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>+++warning 黄色</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token operator\">!</span><span class=\"token operator\">!</span> 警告警告警告警告警告！！<span class=\"token punctuation\">&#123;</span>.bulr<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .success<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>+++danger 红色</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>danger<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .danger<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>+++</pre></td></tr></table></figure><details><summary>默认默认 这里是一段文字</summary><div>\n<p>++ 下划线 ++</p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p>!! 警告警告警告警告警告！！{.bulr}<br>\n<span class=\"label success\">label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n<p>taskList 待办事项<br>\n本功能基于 markdown-it-task-checkbox 。<br>\n可以利用 markdown-it-attrs 添加风格颜色，只可以给 ul 标签添加，需要新建两行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span> 这是一个小叉叉</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> 这是一个红色勾勾</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.danger<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span> 未完成</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> 完成</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>.primary<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span> 未完成</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> 默认颜色</pre></td></tr></table></figure><ul class=\"task-list danger\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 这是一个小叉叉</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> 这是一个红色勾勾</label></li>\n</ul>\n<ul class=\"task-list primary\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\"><label for=\"cbx_3\"> 完成</label></li>\n</ul>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\"><label for=\"cbx_4\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\"><label for=\"cbx_5\"> 默认颜色</label></li>\n</ul>\n<p>furigana 文字注音<br>\n原本用于日语汉字假名注音，但别的注音也可以。<br>\n为了兼容性，采用 markdown-it-ruby 的基本格式： <ruby>文字<rp>【</rp><rt>注音</rt><rp>】</rp></ruby> ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br>\n注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p><ruby>取<rp>【</rp><rt>と</rt><rp>】</rp>り<rt></rt>返<rp>【</rp><rt>かえ</rt><rp>】</rp>す<rt></rt></ruby>\t取とり返かえす<br>\n<ruby>可愛<rp>【</rp><rt>かわい</rt><rp>】</rp>い<rt></rt>犬<rp>【</rp><rt>いぬ</rt><rp>】</rp></ruby>\t可愛かわいい犬いぬ<br>\n<ruby>可<rp>【</rp><rt>か</rt><rp>】</rp>愛<rp>【</rp><rt>わい</rt><rp>】</rp>い<rt></rt>犬<rp>【</rp><rt>いぬ</rt><rp>】</rp></ruby>\t可か愛わいい犬いぬ<br>\n<ruby>アクセラレータ<rp>【</rp><rt>accelerator</rt><rp>】</rp></ruby>\tアクセラレータ accelerator<br>\n<ruby>accelerator<rp>【</rp><rt>アクセラレータ</rt><rp>】</rp></ruby>\taccelerator アクセラレータ<br>\n<ruby>食<rp>【</rp><rt>た</rt><rp>】</rp>べる<rt></rt></ruby>\t食たべる<br>\n<ruby>食べる<rp>【</rp><rt>たべる</rt><rp>】</rp></ruby>\t食べるたべる<br>\n<ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby>\tあ●い●う●え●お●<br>\n<ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby>\tあ❤い❤う❤え❤お❤<br>\n<ruby>常用账号<rp>【</rp><rt>contact</rt><rp>】</rp></ruby>\t常用账号</p>\n<p>media 多媒体<br>\n本功能基于 Hexo Tag 功能，使用 media 标签，目前可选择两种类型，即 audio 和 video 。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼7--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼8--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>标签包绕一段 yml 格式的内容，格式与背景音乐的配置类似。</p>\n<p>亦可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼9--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼10--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>math 数学公式<br>\n本功能基于 markdown-it-katex<br>\n 在 Front Matter 中添加 math: true 以支持 KaTex</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 数学公式显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>math: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>行内公式：$<span class=\"token punctuation\">\\</span>sqrt <span class=\"token punctuation\">&#123;</span>3x-1<span class=\"token punctuation\">&#125;</span>+<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>+x<span class=\"token punctuation\">)</span>^2$</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>独立块显示：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$$</span><span class=\"token punctuation\">\\</span>begin <span class=\"token punctuation\">&#123;</span>array<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">\\</span>nabla <span class=\"token punctuation\">\\</span>times <span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>B<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> -<span class=\"token punctuation\">\\</span>, <span class=\"token punctuation\">\\</span>frac1c<span class=\"token punctuation\">\\</span>, <span class=\"token punctuation\">\\</span>frac <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>partial<span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>E<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>partial t<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">=</span> <span class=\"token punctuation\">\\</span>frac <span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">\\</span>pi<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>c<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>j<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>    <span class=\"token punctuation\">\\</span>nabla <span class=\"token punctuation\">\\</span>cdot <span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>E<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">\\</span>pi <span class=\"token punctuation\">\\</span>rho <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">\\</span>nabla <span class=\"token punctuation\">\\</span>times <span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>E<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">\\</span>, +<span class=\"token punctuation\">\\</span>, <span class=\"token punctuation\">\\</span>frac1c<span class=\"token punctuation\">\\</span>, <span class=\"token punctuation\">\\</span>frac <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>partial<span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>B<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>partial t<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">\\</span>nabla <span class=\"token punctuation\">\\</span>cdot <span class=\"token punctuation\">\\</span>vec <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">\\</span>mathbf <span class=\"token punctuation\">&#123;</span>B<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">\\</span>end <span class=\"token punctuation\">&#123;</span>array<span class=\"token punctuation\">&#125;</span><span class=\"token variable\">$$</span></pre></td></tr></table></figure><p>mermaid 流程图<br>\n本功能基于 markdown-it-mermaid<br>\n 在 Front Matter 中添加 mermaid: true 以支持 Mermaid</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 流程图显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mermaid: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>```mermaid</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>graph LR</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    A <span class=\"token punctuation\">[</span>Square Rect<span class=\"token punctuation\">]</span> -- Link text --<span class=\"token operator\">></span> B <span class=\"token variable\"><span class=\"token punctuation\">((</span>Circle<span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    A --<span class=\"token operator\">></span> C <span class=\"token punctuation\">(</span>Round Rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    B --<span class=\"token operator\">></span> D <span class=\"token punctuation\">&#123;</span>Rhombus<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    C --<span class=\"token operator\">></span> D</pre></td></tr></table></figure><pre class=\"mermaid\"><svg id=\"mermaid-1611642127917\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" height=\"563\" style=\"max-width: 498px;\" viewBox=\"-50 -10 498 563\"><g></g><g><line id=\"actor0\" x1=\"75\" y1=\"5\" x2=\"75\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"0\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><line id=\"actor1\" x1=\"323\" y1=\"5\" x2=\"323\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"248\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g><defs><marker id=\"arrowhead\" refX=\"5\" refY=\"2\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\"><path d=\"M 0,0 V 4 L6,2 Z\"></path></marker></defs><defs><marker id=\"crosshead\" markerWidth=\"15\" markerHeight=\"8\" orient=\"auto\" refX=\"16\" refY=\"4\"><path fill=\"black\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 9,2 V 6 L16,4 Z\" style=\"stroke-dasharray: 0, 0;\"></path><path fill=\"none\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 0,1 L 6,7 M 6,1 L 0,7\" style=\"stroke-dasharray: 0, 0;\"></path></marker></defs><defs><marker id=\"sequencenumber\" refX=\"15\" refY=\"15\" markerWidth=\"60\" markerHeight=\"40\" orient=\"auto\"><circle cx=\"15\" cy=\"15\" r=\"6\"></circle></marker></defs><text x=\"199\" y=\"125\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Hello Bob, how are you?</text><line x1=\"75\" y1=\"158\" x2=\"323\" y2=\"158\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"218\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Not so good :(</text><line x1=\"323\" y1=\"251\" x2=\"75\" y2=\"251\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"311\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Feeling fresh like a daisy</text><line x1=\"323\" y1=\"344\" x2=\"75\" y2=\"344\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"168\" x2=\"333\" y2=\"168\" class=\"loopLine\"></line><line x1=\"333\" y1=\"168\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"354\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"168\" x2=\"65\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"266\" x2=\"333\" y2=\"266\" class=\"loopLine\" style=\"stroke-dasharray: 3, 3;\"></line><polygon points=\"65,168 115,168 115,181 106.6,188 65,188\" class=\"labelBox\"></polygon><text x=\"90\" y=\"181\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">alt</text><text x=\"224\" y=\"186\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[is sick]</tspan></text><text x=\"199\" y=\"284\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">[is well]</text></g><text x=\"199\" y=\"414\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Thanks for asking</text><line x1=\"323\" y1=\"447\" x2=\"75\" y2=\"447\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"364\" x2=\"333\" y2=\"364\" class=\"loopLine\"></line><line x1=\"333\" y1=\"364\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"457\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"364\" x2=\"65\" y2=\"457\" class=\"loopLine\"></line><polygon points=\"65,364 115,364 115,377 106.6,384 65,384\" class=\"labelBox\"></polygon><text x=\"90\" y=\"377\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">opt</text><text x=\"224\" y=\"382\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Extra response]</tspan></text></g><g><line x1=\"55\" y1=\"75\" x2=\"343\" y2=\"75\" class=\"loopLine\"></line><line x1=\"343\" y1=\"75\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"467\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"75\" x2=\"55\" y2=\"467\" class=\"loopLine\"></line><polygon points=\"55,75 105,75 105,88 96.6,95 55,95\" class=\"labelBox\"></polygon><text x=\"80\" y=\"88\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">loop</text><text x=\"224\" y=\"93\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Daily query]</tspan></text></g><g><rect x=\"0\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><rect x=\"248\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g></svg></pre><pre><code>---\ntitle: 流程图显示\nmermaid: true\n---\n\n```mermaid\ngraph LR\n    A [Square Rect] -- Link text --&gt; B ((Circle))\n    A --&gt; C (Round Rect)\n    B --&gt; D &#123;Rhombus&#125;\n    C --&gt; D\n</code></pre>\n<pre class=\"mermaid\"><svg id=\"mermaid-1611642128846\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" height=\"563\" style=\"max-width: 498px;\" viewBox=\"-50 -10 498 563\"><g></g><g><line id=\"actor0\" x1=\"75\" y1=\"5\" x2=\"75\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"0\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><line id=\"actor1\" x1=\"323\" y1=\"5\" x2=\"323\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"248\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g><defs><marker id=\"arrowhead\" refX=\"5\" refY=\"2\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\"><path d=\"M 0,0 V 4 L6,2 Z\"></path></marker></defs><defs><marker id=\"crosshead\" markerWidth=\"15\" markerHeight=\"8\" orient=\"auto\" refX=\"16\" refY=\"4\"><path fill=\"black\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 9,2 V 6 L16,4 Z\" style=\"stroke-dasharray: 0, 0;\"></path><path fill=\"none\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 0,1 L 6,7 M 6,1 L 0,7\" style=\"stroke-dasharray: 0, 0;\"></path></marker></defs><defs><marker id=\"sequencenumber\" refX=\"15\" refY=\"15\" markerWidth=\"60\" markerHeight=\"40\" orient=\"auto\"><circle cx=\"15\" cy=\"15\" r=\"6\"></circle></marker></defs><text x=\"199\" y=\"125\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Hello Bob, how are you?</text><line x1=\"75\" y1=\"158\" x2=\"323\" y2=\"158\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"218\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Not so good :(</text><line x1=\"323\" y1=\"251\" x2=\"75\" y2=\"251\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"311\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Feeling fresh like a daisy</text><line x1=\"323\" y1=\"344\" x2=\"75\" y2=\"344\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"168\" x2=\"333\" y2=\"168\" class=\"loopLine\"></line><line x1=\"333\" y1=\"168\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"354\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"168\" x2=\"65\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"266\" x2=\"333\" y2=\"266\" class=\"loopLine\" style=\"stroke-dasharray: 3, 3;\"></line><polygon points=\"65,168 115,168 115,181 106.6,188 65,188\" class=\"labelBox\"></polygon><text x=\"90\" y=\"181\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">alt</text><text x=\"224\" y=\"186\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[is sick]</tspan></text><text x=\"199\" y=\"284\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">[is well]</text></g><text x=\"199\" y=\"414\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Thanks for asking</text><line x1=\"323\" y1=\"447\" x2=\"75\" y2=\"447\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"364\" x2=\"333\" y2=\"364\" class=\"loopLine\"></line><line x1=\"333\" y1=\"364\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"457\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"364\" x2=\"65\" y2=\"457\" class=\"loopLine\"></line><polygon points=\"65,364 115,364 115,377 106.6,384 65,384\" class=\"labelBox\"></polygon><text x=\"90\" y=\"377\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">opt</text><text x=\"224\" y=\"382\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Extra response]</tspan></text></g><g><line x1=\"55\" y1=\"75\" x2=\"343\" y2=\"75\" class=\"loopLine\"></line><line x1=\"343\" y1=\"75\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"467\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"75\" x2=\"55\" y2=\"467\" class=\"loopLine\"></line><polygon points=\"55,75 105,75 105,88 96.6,95 55,95\" class=\"labelBox\"></polygon><text x=\"80\" y=\"88\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">loop</text><text x=\"224\" y=\"93\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Daily query]</tspan></text></g><g><rect x=\"0\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><rect x=\"248\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g></svg></pre>",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/25/computer-science/java/course-1/Linux%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "url": "https://alanosy.github.io/2021/01/25/computer-science/java/course-1/Linux%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "title": "Linux搭建博客",
            "date_published": "2021-01-25T05:58:22.000Z",
            "content_html": "<p>Hexo 简介<br>\n Hexo 是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Gitee 上，是搭建博客的首选框架。大家可以进入 hexo 官网进行详细查看，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看</p>\n<p>安装 Git<br>\nGit 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span> -y</pre></td></tr></table></figure><p>安装 nodejs<br>\nHexo 是基于 nodeJS 编写的，所以需要安装一下 nodeJs 和里面的 npm 工具</p>\n<p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> nodejs <span class=\"token function\">npm</span> -y</pre></td></tr></table></figure><p>安装完后，输入命令</p>\n<p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ node -v</pre></td></tr></table></figure><p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> -v</pre></td></tr></table></figure><p>检查是否安装成功</p>\n<p>更换 npm 源为淘宝源</p>\n<p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure><p>安装 hexo<br>\n 前面 git 和 nodejs 安装好后，就可以安装 hexo 了，先创建一个文件夹 filename，然后 cd 到这个文件夹下</p>\n<p>输入命令</p>\n<p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli</pre></td></tr></table></figure><p>输入命令</p>\n<p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo -v</pre></td></tr></table></figure><p>查看版本信息</p>\n<p>初始化 hexo</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wp-block-code</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo init filename<span class=\"token punctuation\">(</span>文件名随意定义<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>wp-block-code</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> filename //进入这个文件夹</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wp-block-code</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span> <span class=\"token comment\">#说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为 hexo,~/root/hexo 以下将使用这个文件夹）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo init <span class=\"token comment\">#说明：自动在文件夹（hexo1）中创建项目所需的文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token comment\">#说明：安装依赖包</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ hexo generate <span class=\"token comment\">#说明：构建，会在 hexo1 中创建 public 文件夹</span></pre></td></tr></table></figure><p>执行完以上命令后，会多出以下文件和文件夹<br>\n例如<br>\n新建完成后，指定文件夹目录下有：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>_config.yml：站点的配置文件，需要备份</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>themes：主题文件夹，需要备份</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>source：博客文章的 .md 文件，需要备份</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>scaffolds：文章的模板，需要备份</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>package.json：安装包的名称，需要备份</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.gitignore：限定在 push 时哪些文件可以忽略，需要备份</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.git：主题和站点都有，标志这是一个 <span class=\"token function\">git</span> 项目，不需要备份</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>node_modules：是安装包的目录，在执行 <span class=\"token function\">npm</span> <span class=\"token function\">install</span> 的时候会重新生成，不需要备份</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>public：是 hexo g 生成的静态网页，不需要备份</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>.deploy_git：同上，hexo g 也会生成，不需要备份</pre></td></tr></table></figure><p>db.json：文件，不需要备份<br>\n输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo g</pre></td></tr></table></figure><p>输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo s</pre></td></tr></table></figure><p>打开 hexo 的服务<br>\n在浏览器输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ http://localhost:4000</pre></td></tr></table></figure><p>就可以看到你生成的博客<br>\n使用 ctrl+c 停止服务<br>\n Hexo+Github<br>\nGitHub 创建个人仓库<br>\n注册登录 github 官网，点击右上角加号，点击 New repository，新建仓库<br>\n创建一个和用户名相同的仓库，即 http://xxxx.github.io，其中 xxx 是 github 的用户名<br>\n点击 create repository<br>\nGit 初始化设置<br>\n输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"yourname\"</span></pre></td></tr></table></figure><p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"youremail\"</span></pre></td></tr></table></figure><p>yourname 是 github 用户名，youremail 是注册 github 的邮箱<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config user.name</pre></td></tr></table></figure><p>wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config user.email</pre></td></tr></table></figure><p>检查是否正确，输入命令<br>\n生成 SSH 添加到 GitHub<br>\n 输入命令，创建 SSH, 一路回车<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ssh-keygen -t rsa -C <span class=\"token string\">\"youremail\"</span></pre></td></tr></table></figure><p>查看 SSH KEY，输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub</pre></td></tr></table></figure><p>复制 id_rsa.pub 里面的全部内容<br>\n在 github 的 setting 中，找到 SSH keys 的设置选项，点击 New SSH key，粘贴 id_rsa.pub 里面的全部内容<br>\n输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">ssh</span> -T git@github.com</pre></td></tr></table></figure><p>查看是否连接成功<br>\n打开站点配置文件 _config.yml，修改添加以下内容<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deploy:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  type: <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  repo: git@github.com:yourgithubname/yourgithubname.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  branch: master</pre></td></tr></table></figure><p>安装 deploy-git ，也就是部署的命令，这样才能用命令部署到 github<br>\nwp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git --save</pre></td></tr></table></figure><p>输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo clean 第一次安装不用清缓存</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo clean <span class=\"token operator\">&amp;&amp;</span>　hexo g -d 　缩写</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo g <span class=\"token operator\">=</span> hexo generate 生成静态文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ hexo generate -deploy 生成静态文件后立即部署网站</pre></td></tr></table></figure><p>打开下面的网址</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ http://yourname.github.io</pre></td></tr></table></figure><p>就可看到和<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAw\"> http://localhost:4000</span><br>\n 一样的了！<br>\n关联 Git 仓库<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> clone https://github.com/你的用户名/你的用户名.github.io.git</pre></td></tr></table></figure><p>执行之后会在当前目录生成’<span class=\"exturl\" data-url=\"aHR0cDovL3huLS02cXF2N2kxNG9mb3N5cmIuZ2l0aHViLmlv\">你的用户名.github.io</span>’的文件夹，这是关联 github 仓库的文件夹，需要上传的文件都会移动到这里<br>\n更多精彩内容请点击 hexo 官网<br>\n (附上我的博客链接)<br>\nHexo+Gitee<br>\nGitee 创建个人仓库<br>\n打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库<br>\n开启 Gitee Pages<br>\n 点击启动<br>\n启动后，点击蓝色链接打开网址<br>\n初始化 Git 设置<br>\n输入命令<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"这里输入你的Gitee注册名\"</span>// 按回车</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"这里输你的Gitee邮箱\"</span></pre></td></tr></table></figure><p>生成 SSH 密钥文件<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ssh-keygen -t rsa -C <span class=\"token string\">\"你的Gitee注册邮箱\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ // 可不输入，三个回车</pre></td></tr></table></figure><p>复制粘贴到码云<br>\n配置 _config.yml<br>\n 点击复制克隆 / 下载里面的 https 的内容<br>\n修改添加_config.yml 以下内容<br>\n wp-block-code</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名<span class=\"token punctuation\">(</span>粘贴<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root: /仓库名/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>wp-block-code</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>deploy:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  type: <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  repo: https://gitee.com/空间名/仓库名<span class=\"token punctuation\">(</span>粘贴<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  branch: master</pre></td></tr></table></figure><p>基础配置可以参考官方文档的配置说明</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ wp-block-code</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ hexo clean <span class=\"token operator\">&amp;&amp;</span>　hexo g -d 　缩写 清缓存</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ hexo g <span class=\"token operator\">=</span> hexo generate 生成静态文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ hexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee</pre></td></tr></table></figure><p>打开 Gitee Pages 服务 ，每次上传或改动，都要点击 “更新” 打开网址访问</p>\n",
            "tags": []
        }
    ]
}