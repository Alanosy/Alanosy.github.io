{
    "version": "https://jsonfeed.org/version/1",
    "title": "Alan",
    "description": "",
    "home_page_url": "https://alanosy.github.io",
    "items": [
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/hello-world/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/hello-world/",
            "title": "Hello Hexo",
            "date_published": "2021-01-26T03:04:10.232Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/2020-1-26/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/2020-1-26/",
            "title": "2020-1-26",
            "date_published": "2021-01-26T02:55:39.000Z",
            "content_html": "<p>2020-1-26<br>开发出了Hexo站点</p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC/",
            "title": "关于我们",
            "date_published": "2021-01-26T02:26:31.000Z",
            "content_html": "<p>本主题作者： Ruri Shimotsuki @優萌初華<br>本站主题链接： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUv\">https://shoka.lostyu.me</span></p>\n<p>此站站主：Alan<br>临近高考记录一下学习生涯<br>和自己的一些兴趣爱好<br>联系邮箱：<span class=\"exturl\" data-url=\"bWFpbHRvOiYjeDQxOyYjeDZjOyYjOTc7JiMxMTA7JiMxMTE7JiN4NzM7JiM2NDsmI3g2MTsmI3g2YzsmI3g2OTsmI3g3OTsmIzExNzsmIzExMDsmIzQ2OyYjOTk7JiMxMTE7JiN4NmQ7\">&#x41;&#x6c;&#97;&#110;&#111;&#x73;&#64;&#x61;&#x6c;&#x69;&#x79;&#117;&#110;&#46;&#99;&#111;&#x6d;</span><br>微信:fignet<br>QQ:9077584</p>\n<p>版权声明： 本站所有文章除特别声明外，均采用 (CC)BY-NC-SA 许可协议。转载请注明出处！</p>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD/",
            "url": "https://alanosy.github.io/2021/01/26/computer-science/java/course-1/%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD/",
            "title": "特殊功能",
            "date_published": "2021-01-26T01:27:48.000Z",
            "content_html": "<p>links 链接块<br>本功能参考 NexT，基于 Hexo Tag 功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<p>使用 links 标签块，包围 yml 语法书写的内容，字段包括<br>site    站点名称    必填<br>owner    管理员名字    可选，默认为 site 的值<br>url        站点链接    必填<br>desc    站点描述    可选，默认为 url 的值<br>image    站点图片    可选，默认为 images/404.png<br>color    方块颜色    可选，默认为 #666</p>\n<pre><code class=\"bash\">&#123;% links %&#125;\n- site: #站点名称\n  owner: #管理员名字\n  url: #站点网址\n  desc: #简短描述\n  image: #一张图片\n  color: #颜色代码\n&#123;% endlinks %&#125;</code></pre>\n<p>举个栗子：</p>\n<pre><code class=\"bash\">&#123;% links %&#125;\n- site: 優萌初華\n  owner: 霜月琉璃\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 & 编程笔记\n  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\n  color: \"#e9546b\"\n\n- site: 優萌初華\n  owner: 霜月琉璃\n  url: https://shoka.lostyu.me\n  image: images/avatar.jpg\n\n- site: 優萌初華\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 & 编程笔记\n  color: \"#9d5b8b\"\n&#123;% endlinks %&#125;</code></pre>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n\n<p>以上标签块里的内容，还可以保存到一个 yml 文件中，然后使用 linksfile 标签。<br>其中， path 位于 <root>/source 目录下。</p>\n<pre><code class=\"bash\">&#123;% linksfile [path] %&#125;</code></pre>\n<p>举个栗子：</p>\n<pre><code class=\"bash\">&#123;% linksfile friends/_data.yml %&#125;</code></pre>\n<p>code 代码块</p>\n<p>使用 markdown-it-prism 进行代码高亮，支持显示行号、行高亮 mark 、命令行提示符 command 、代码块标题。</p>\n<p>基本格式： [language] [title] [url] [link text] [mark] [command]</p>\n<p>选项    描述    默认值<br>language</p>\n<p>支持的语言戳此<br>如果不需要代码高亮，但希望显示代码块样式，则设为 raw<br>留空或设为 info ，将不显示代码高亮和代码块样式<br>null</p>\n<p>title    代码块的标题文字    null<br>url    代码块标题右侧显示的链接    null<br>link text    上述链接显示的标题    link<br>mark</p>\n<p>行高亮显示，格式为 mark:行号,行号开始-行号结束,其他行号 。<br>例如 mark:1,4-7,10 ，将高亮显示第 1、4、5、6、7、10 行</p>\n<p>null</p>\n<p>command</p>\n<p>命令行提示符，格式为 command:(“提示内容”:行号,行号||”提示内容”:行号开始-行号结束)<br>例如 command:(“[root@localhost] $”:1,9-10||”[admin@remotehost] #”:4-6)</p>\n<p>null</p>\n<pre><code class=\"bash\">```java 行高亮 https://shoka.lostyu.me 参考链接 mark:1,6-7\nimport java.util.Scanner;\n...\nScanner in = new Scanner (System.in);\n// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。\n\nSystem.out.println (in.nextLine ());\nSystem.out.println (&quot;Hello&quot; + &quot;world.&quot;);</code></pre>\n<pre><code class=\"bash\">pwd\n/usr/home/chris/bin\nls -la\ntotal 2\ndrwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .\ndrwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..\n-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup\n-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy\ngit add -A\ngit commit -m &quot;update&quot;\ngit push</code></pre>\n<pre><code class=\"bash\">import java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。\n\nSystem.out.println(in.nextLine());\nSystem.out.println(&quot;Hello&quot; + &quot; world.&quot;);</code></pre>\n<pre><code class=\"bash\">pwd\n/usr/home/chris/bin\nls -la\ntotal 2\ndrwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .\ndrwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..\n-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup\n-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy\ngit add -A\ngit commit -m &quot;update&quot;\ngit push</code></pre>\n<p>quiz 练习题与答案<br>这个功能是用来显示练习题的。<br>需要在 Front Matter 中添加 quiz: true ，以正确显示题型标签。</p>\n<pre><code class=\"bash\">---\ntitle: 练习题与答案\nquiz: true\n---\n\n1. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 &#123;.quiz .true&#125;\n\n2. 有基类 `SHAPE`，派生类 `CIRCLE`，声明如下变量：  &#123;.quiz .multi&#125;\n    ```cpp\n    SHAPE shape1,*p1;\n    CIRCLE circle1,*q1;\n    ```\n    下列哪些项是 “派生类对象替换基类对象”。\n    - `p1=&amp;circle1;` &#123;.correct&#125;\n    - `q1=&amp;shape1;`\n    - `shape1=circle1;` &#123;.correct&#125;\n    - `circle1=shape1;`\n&#123;.options&#125;\n    &gt; - :heavy_check_mark: 令基类对象的指针指向派生类对象\n    &gt; - :x: 派生类指针指向基类的引用\n    &gt; - :heavy_check_mark: 派生类对象给基类对象赋值\n    &gt; - :x: 基类对象给派生类对象赋值\n    &gt; &#123;.options&#125;\n\n3. 下列叙述正确的是 []&#123;.gap&#125; 。 &#123;.quiz&#125;\n    - 虚函数只能定义成无参函数\n    - 虚函数不能有返回值\n    - 能定义虚构造函数\n    - A、B、C 都不对 &#123;.correct&#125;\n&#123;.options&#125;\n\n10. 如果定义 `int e=8; double f=6.4, g=8.9;`，则表达式 `f+int (e/3*int (f+g)/2)%4` 的值为 [9.4]&#123;.gap&#125;。 &#123;.quiz .fill&#125;\n    &gt; 注意运算顺序和数据类型\n    &gt; [8.4]&#123;.mistake&#125;</code></pre>\n<hr>\n<p>title: 练习题与答案<br>quiz: true</p>\n<hr>\n<ol>\n<li><p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 {.quiz .true}</p>\n</li>\n<li><p>有基类 <code>SHAPE</code>，派生类 <code>CIRCLE</code>，声明如下变量：  {.quiz .multi}</p>\n<pre><code class=\"cpp\">SHAPE shape1,*p1;\nCIRCLE circle1,*q1;</code></pre>\n<p> 下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul>\n<li><code>p1=&amp;circle1;</code> {.correct}</li>\n<li><code>q1=&amp;shape1;</code></li>\n<li><code>shape1=circle1;</code> {.correct}</li>\n<li><code>circle1=shape1;</code><br>{.options}<blockquote>\n<ul>\n<li>:heavy_check_mark: 令基类对象的指针指向派生类对象</li>\n<li>:x: 派生类指针指向基类的引用</li>\n<li>:heavy_check_mark: 派生类对象给基类对象赋值</li>\n<li>:x: 基类对象给派生类对象赋值<br>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>下列叙述正确的是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li>A、B、C 都不对 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>如果定义 <code>int e=8; double f=6.4, g=8.9;</code>，则表达式 <code>f+int (e/3*int (f+g)/2)%4</code> 的值为 [9.4]{.gap}。 {.quiz .fill}</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br>[8.4]{.mistake}<br>有基类 SHAPE ，派生类 CIRCLE ，声明如下变量：</p>\n</blockquote>\n<pre><code class=\"bash\">SHAPE shape1,*p1;\nCIRCLE circle1,*q1;</code></pre>\n</li>\n</ol>\n<p>使用说明<br>本功能基于 markdown-it-bracketed-spans 和 markdown-it-attrs</p>\n<pre><code class=\"bash\">\n标签    含义\n&#123;.quiz&#125;    选择题\n&#123;.quiz .multi&#125;    多选题\n&#123;.quiz .true&#125;    正确的判断题\n&#123;.quiz .false&#125;    错误的判断题\n&#123;.quiz .fill&#125;    填空题\n[]&#123;.gap&#125;    空白下划线\n[答案内容]&#123;.gap&#125;    答案内容带下划线\n&#123;.options&#125;    ABCDE 选项\n&#123;.correct&#125;    选择题的正确选项\n&gt;    答案解析\n[8.4]&#123;.mistake&#125;    错题备注</code></pre>\n<p>#emoji 绘文字</p>\n<p>本功能基于 markdown-it-emoji ，所有标签参考戳此</p>\n<pre><code class=\"bash\">:kissing_heart:\n:ring:\n:notes:</code></pre>\n<p>effects 文字特效<br>本功能基于 markdown-it-ins 、 markdown-it-bracketed-spans 和 markdown-it-attrs</p>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n<pre><code class=\"bash\">++ 下划线 ++\n++ 波浪线 ++&#123;.wavy&#125;\n++ 着重点 ++&#123;.dot&#125;\n++ 紫色下划线 ++&#123;.primary&#125;\n++ 绿色波浪线 ++&#123;.wavy .success&#125;\n++ 黄色着重点 ++&#123;.dot .warning&#125;\n~~ 删除线～～\n~~ 红色删除线～～&#123;.danger&#125;\n== 荧光高亮 ==\n[赤橙黄绿青蓝紫]&#123;.rainbow&#125;\n[红色]&#123;.red&#125;\n[粉色]&#123;.pink&#125;\n[橙色]&#123;.orange&#125;\n[红色]&#123;.yellow&#125;\n[绿色]&#123;.green&#125;\n[靛青]&#123;.aqua&#125;\n[蓝色]&#123;.blue&#125;\n[紫色]&#123;.purple&#125;\n[灰色]&#123;.grey&#125;\n快捷键 [Ctrl]&#123;.kbd&#125; + [C]&#123;.kbd .red&#125;\nH~2~0\n29^th^</code></pre>\n<p>++ 下划线 ++<br>++ 波浪线 ++{.wavy}<br>++ 着重点 ++{.dot}<br>++ 紫色下划线 ++{.primary}<br>++ 绿色波浪线 ++{.wavy .success}<br>++ 黄色着重点 ++{.dot .warning}<br>~~ 删除线～～<br>~~ 红色删除线～～{.danger}<br>== 荧光高亮 ==<br>[赤橙黄绿青蓝紫]{.rainbow}<br>[红色]{.red}<br>[粉色]{.pink}<br>[橙色]{.orange}<br>[红色]{.yellow}<br>[绿色]{.green}<br>[靛青]{.aqua}<br>[蓝色]{.blue}<br>[紫色]{.purple}<br>[灰色]{.grey}<br>快捷键 [Ctrl]{.kbd} + [C]{.kbd .red}<br>H<del>2</del>0<br>29^th^</p>\n<p>spoiler 隐藏文字<br>本功能基于 markdown-it-spoiler 和 markdown-it-attrs</p>\n<pre><code class=\"bash\">!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容\n!! 模糊模糊模糊模糊模糊模糊！！&#123;.bulr&#125; ： 选中文字显示内容</code></pre>\n<p>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容<br>!! 模糊模糊模糊模糊模糊模糊！！{.bulr} ： 选中文字显示内容</p>\n<p>#label 标签块<br>本功能基于 markdown-it-bracketed-spans 和 markdown-it-attrs<br>有以下颜色可选</p>\n<pre><code class=\"bash\">[default]&#123;.label&#125;\n[primary]&#123;.label .primary&#125;\n[info]&#123;.label .info&#125;\n[:heavy_check_mark:success]&#123;.label .success&#125;\n[warning]&#123;.label .warning&#125;\n[:broken_heart:danger]&#123;.label .danger&#125;</code></pre>\n<p>[default]{.label}<br>[primary]{.label .primary}<br>[info]{.label .info}<br>[:heavy_check_mark:success]{.label .success}<br>[warning]{.label .warning}<br>[:broken_heart:danger]{.label .danger}</p>\n<p>note 提醒块<br>本功能基于 markdown-it-container<br>标签为：</p>\n<p>开始行    :::[风格颜色]<br>结束行</p>\n<pre><code class=\"bash\">:::default\n默认默认\n:::\n\n:::primary\n基本基本\n:::\n\n:::info\n提示提示\n:::\n\n:::success\n成功成功\n:::\n\n:::warning\n警告警告\n:::\n\n:::danger\n危险危险\n:::\n\n:::danger no-icon\n危险危险\n:::</code></pre>\n<p>:::default<br>默认默认<br>:::</p>\n<p>:::primary<br>基本基本<br>:::</p>\n<p>:::info<br>提示提示<br>:::</p>\n<p>:::success<br>成功成功<br>:::</p>\n<p>:::warning<br>警告警告<br>:::</p>\n<p>:::danger<br>危险危险<br>:::</p>\n<p>:::danger no-icon<br>危险危险<br>:::</p>\n<p>tab 标签卡<br>本功能基于 markdown-it-container<br>标签为：</p>\n<p>开始行    ;;;[同一ID] [标签名称]<br>结束行    ;;;</p>\n<pre><code class=\"bash\">;;;id1 卡片 1\n这里是卡片 1 的内容\n** 加粗 **\n[success]&#123;.label .success&#125;\n\n&#123;% links %&#125;\n- site: 優萌初華\n  owner: 霜月琉璃\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 & 编程笔记\n  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\n  color: \"#e9546b\"\n&#123;% endlinks %&#125;\n;;;\n\n;;;id1 卡片 2\n这里是卡片 2 的内容\n:::danger\n危险危险\n:::\n- 第一行\n- 第二行\n;;;\n\n;;;id2 ②号标签卡片 1\n这里是卡片 1 的内容\n;;;\n\n;;;id2 ②号标签卡片 2\n这里是卡片 2 的内容\n;;;</code></pre>\n<p>;;;id1 卡片 1<br>这里是卡片 1 的内容<br>** 加粗 **<br>[success]{.label .success}</p>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n<p>;;;</p>\n<p>;;;id1 卡片 2<br>这里是卡片 2 的内容<br>:::danger<br>危险危险<br>:::</p>\n<ul>\n<li>第一行</li>\n<li>第二行<br>;;;</li>\n</ul>\n<p>;;;id2 ②号标签卡片 1<br>这里是卡片 1 的内容<br>;;;</p>\n<p>;;;id2 ②号标签卡片 2<br>这里是卡片 2 的内容<br>;;;</p>\n<p>#collapse 折叠块<br>本功能基于 markdown-it-container<br>标签为：</p>\n<p>开始行    +++[风格颜色] [标题文字]<br>结束行    +++</p>\n<pre><code class=\"bash\">+++ 默认默认 这里是一段文字\n++ 下划线 ++\n+++\n\n\n+++primary 紫色\n:::info\n参考信息\n:::\n\n- 第一行\n- 第二行\n+++\n\n\n+++info  蓝色\n;;;id3 卡片 1\n这里是卡片 1 的内容\n;;;\n\n;;;id3 卡片 2\n这里是卡片 2 的内容\n;;;\n+++\n\n+++success 绿色\n&#123;% links %&#125;\n- site: 優萌初華\n  url: https://shoka.lostyu.me\n  color: \"#e9546b\"\n&#123;% endlinks %&#125;\n+++\n\n+++warning 黄色\n!! 警告警告警告警告警告！！&#123;.bulr&#125;\n[label]&#123;.label .success&#125;\n+++\n\n+++danger 红色\n[danger]&#123;.label .danger&#125;\n+++</code></pre>\n<p>+++ 默认默认 这里是一段文字<br>++ 下划线 ++<br>+++</p>\n<p>+++primary 紫色<br>:::info<br>参考信息<br>:::</p>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n<p>+++</p>\n<p>+++info  蓝色<br>;;;id3 卡片 1<br>这里是卡片 1 的内容<br>;;;</p>\n<p>;;;id3 卡片 2<br>这里是卡片 2 的内容<br>;;;<br>+++</p>\n<p>+++success 绿色</p>\n<div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"//cdn.jsdelivr.net/gh/Alanosy/Alanosy.github.io@latest/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div>\n<p>+++</p>\n<p>+++warning 黄色<br>!! 警告警告警告警告警告！！{.bulr}<br>[label]{.label .success}<br>+++</p>\n<p>+++danger 红色<br>[danger]{.label .danger}<br>+++</p>\n<p>taskList 待办事项<br>本功能基于 markdown-it-task-checkbox 。<br>可以利用 markdown-it-attrs 添加风格颜色，只可以给 ul 标签添加，需要新建两行。</p>\n<pre><code class=\"bash\">- [ ] 这是一个小叉叉\n- [x] 这是一个红色勾勾\n\n&#123;.danger&#125;\n\n- [ ] 未完成\n- [x] 完成\n\n&#123;.primary&#125;\n\n- [ ] 未完成\n- [x] 默认颜色</code></pre>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 这是一个小叉叉</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 这是一个红色勾勾</li>\n</ul>\n<p>{.danger}</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成</li>\n</ul>\n<p>{.primary}</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 默认颜色</li>\n</ul>\n<p>furigana 文字注音<br>原本用于日语汉字假名注音，但别的注音也可以。<br>为了兼容性，采用 markdown-it-ruby 的基本格式： {文字^注音} ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br>注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p>{取り返す^とりかえす}    取とり返かえす<br>{可愛い犬^か+わい・い・いぬ}    可愛かわいい犬いぬ<br>{可愛い犬^か・わい・いいぬ}    可か愛わいい犬いぬ<br>{アクセラレータ^accelerator}    アクセラレータaccelerator<br>{accelerator^アクセラレータ}    acceleratorアクセラレータ<br>{食べる^たべる}    食たべる<br>{食べる^=たべる}    食べるたべる<br>{あいうえお^*}    あ●い●う●え●お●<br>{あいうえお^*❤}    あ❤い❤う❤え❤お❤<br>{常用账号^contact}    常用账号</p>\n<p>media 多媒体<br>本功能基于 Hexo Tag 功能，使用 media 标签，目前可选择两种类型，即 audio 和 video 。</p>\n<pre><code class=\"bash\">&#123;% media audio %&#125;\n... 音频列表\n&#123;% endmedia %&#125;\n\n&#123;% media video %&#125;\n... 视频列表\n&#123;% endmedia %&#125;</code></pre>\n<p>标签包绕一段 yml 格式的内容，格式与背景音乐的配置类似。</p>\n<p>亦可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲。</p>\n<pre><code class=\"bash\">&#123;% media audio %&#125;\n- title: 列表 1\n  list:\n    - https://music.163.com/#/playlist?id=2943811283\n    - https://music.163.com/#/playlist?id=2297706586\n- title: 列表 2\n  list:\n    - https://music.163.com/#/playlist?id=2031842656\n&#123;% endmedia %&#125;\n\n\n&#123;% media video %&#125;\n- name: \"测试 1\"\n  url: https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\n- name: \"测试 2\"\n  url: https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\n&#123;% endmedia %&#125;</code></pre>\n<p>math 数学公式<br>本功能基于 markdown-it-katex<br>在 Front Matter 中添加 math: true 以支持 KaTex</p>\n<pre><code class=\"bash\">---\ntitle: 数学公式显示\nmath: true\n---\n\n行内公式：$\\sqrt &#123;3x-1&#125;+(1+x)^2$\n\n独立块显示：\n$$\\begin &#123;array&#125;&#123;c&#125;\n\n\\nabla \\times \\vec &#123;\\mathbf &#123;B&#125;&#125; -\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;E&#125;&#125;&#125;&#123;\\partial t&#125; &amp;\n= \\frac &#123;4\\pi&#125;&#123;c&#125;\\vec &#123;\\mathbf &#123;j&#125;&#125;    \\nabla \\cdot \\vec &#123;\\mathbf &#123;E&#125;&#125; &amp; = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec &#123;\\mathbf &#123;E&#125;&#125;\\, +\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;B&#125;&#125;&#125;&#123;\\partial t&#125; &amp; = \\vec &#123;\\mathbf &#123;0&#125;&#125; \\\\\n\n\\nabla \\cdot \\vec &#123;\\mathbf &#123;B&#125;&#125; &amp; = 0\n\n\\end &#123;array&#125;$$</code></pre>\n<p>mermaid 流程图<br>本功能基于 markdown-it-mermaid<br>在 Front Matter 中添加 mermaid: true 以支持 Mermaid</p>\n<pre><code class=\"bash\">---\ntitle: 流程图显示\nmermaid: true\n---\n\n```mermaid\ngraph LR\n    A [Square Rect] -- Link text --&gt; B ((Circle))\n    A --&gt; C (Round Rect)\n    B --&gt; D &#123;Rhombus&#125;\n    C --&gt; D</code></pre>\n<pre><code class=\"mermaid\">sequenceDiagram\n    loop Daily query\n        Alice-&gt;&gt;Bob: Hello Bob, how are you?\n        alt is sick\n            Bob-&gt;&gt;Alice: Not so good :(\n        else is well\n            Bob-&gt;&gt;Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob-&gt;&gt;Alice: Thanks for asking\n        end\n    end</code></pre>\n<pre><code>---\ntitle: 流程图显示\nmermaid: true\n---\n\n```mermaid\ngraph LR\n    A [Square Rect] -- Link text --&gt; B ((Circle))\n    A --&gt; C (Round Rect)\n    B --&gt; D &#123;Rhombus&#125;\n    C --&gt; D</code></pre>\n<pre><code class=\"mermaid\">sequenceDiagram\n    loop Daily query\n        Alice-&gt;&gt;Bob: Hello Bob, how are you?\n        alt is sick\n            Bob-&gt;&gt;Alice: Not so good :(\n        else is well\n            Bob-&gt;&gt;Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob-&gt;&gt;Alice: Thanks for asking\n        end\n    end</code></pre>\n",
            "tags": []
        },
        {
            "id": "https://alanosy.github.io/2021/01/25/computer-science/java/course-1/Linux%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "url": "https://alanosy.github.io/2021/01/25/computer-science/java/course-1/Linux%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "title": "Linux搭建博客",
            "date_published": "2021-01-25T05:58:22.000Z",
            "content_html": "<p>Hexo简介<br>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Gitee上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看</p>\n<p>安装Git<br>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理</p>\n<pre><code class=\"bash\">$ apt-get install git -y</code></pre>\n<p>安装nodejs<br>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具</p>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ apt-get install nodejs npm -y</code></pre>\n<p>安装完后，输入命令</p>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ node -v</code></pre>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ npm -v</code></pre>\n<p>检查是否安装成功</p>\n<p>更换npm源为淘宝源</p>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ npm config set registry https://registry.npm.taobao.org</code></pre>\n<p>安装hexo<br>前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹filename，然后cd到这个文件夹下</p>\n<p>输入命令</p>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ npm install -g hexo-cli</code></pre>\n<p>输入命令</p>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ hexo -v</code></pre>\n<p>查看版本信息</p>\n<p>初始化hexo</p>\n<pre><code class=\"bash\">wp-block-code\n$ hexo init filename(文件名随意定义)\nwp-block-code\n$ cd filename //进入这个文件夹\nwp-block-code\n$ npm install</code></pre>\n<pre><code class=\"bash\">$ cd &lt;folder&gt; #说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为hexo,~/root/hexo以下将使用这个文件夹）\n$ hexo init #说明：自动在文件夹（hexo1）中创建项目所需的文件\n$ npm install #说明：安装依赖包\n$ hexo generate #说明：构建，会在hexo1中创建public文件夹</code></pre>\n<p>执行完以上命令后，会多出以下文件和文件夹<br>例如<br>新建完成后，指定文件夹目录下有：</p>\n<pre><code class=\"bash\">_config.yml：站点的配置文件，需要备份\nthemes：主题文件夹，需要备份\nsource：博客文章的 .md 文件，需要备份\nscaffolds：文章的模板，需要备份\npackage.json：安装包的名称，需要备份\n.gitignore：限定在 push 时哪些文件可以忽略，需要备份\n.git：主题和站点都有，标志这是一个 git 项目，不需要备份\nnode_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份\npublic：是 hexo g 生成的静态网页，不需要备份\n.deploy_git：同上，hexo g 也会生成，不需要备份</code></pre>\n<p>db.json：文件，不需要备份<br>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ hexo g</code></pre>\n<p>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ hexo s</code></pre>\n<p>打开hexo的服务<br>在浏览器输入</p>\n<pre><code class=\"bash\">$ http://localhost:4000</code></pre>\n<p>就可以看到你生成的博客<br>使用ctrl+c停止服务<br>Hexo+Github<br>GitHub创建个人仓库<br>注册登录github官网，点击右上角加号，点击New repository，新建仓库<br>创建一个和用户名相同的仓库,即<span class=\"exturl\" data-url=\"aHR0cDovL3h4eHguZ2l0aHViLmlvLOWFtuS4rXh4eOaYr2dpdGh1YueahOeUqOaIt+WQjS8=\">http://xxxx.github.io，其中xxx是github的用户名</span><br>点击create repository<br>Git初始化设置<br>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ git config --global user.name &quot;yourname&quot; </code></pre>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ git config --global user.email &quot;youremail&quot;</code></pre>\n<p>yourname是github用户名，youremail是注册github的邮箱<br>wp-block-code</p>\n<pre><code class=\"bash\">$ git config user.name </code></pre>\n<p>wp-block-code</p>\n<pre><code class=\"bash\">$ git config user.email</code></pre>\n<p>检查是否正确，输入命令<br>生成SSH添加到GitHub<br>输入命令，创建SSH,一路回车<br>wp-block-code</p>\n<pre><code class=\"bash\">$ ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre>\n<p>查看SSH KEY，输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ cat ~/.ssh/id_rsa.pub</code></pre>\n<p>复制id_rsa.pub里面的全部内容<br>在github的setting中，找到SSH keys的设置选项，点击New SSH key，粘贴id_rsa.pub里面的全部内容<br>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ ssh -T git@github.com</code></pre>\n<p>查看是否连接成功<br>打开站点配置文件 _config.yml，修改添加以下内容<br>wp-block-code</p>\n<pre><code class=\"bash\">deploy:\n  type: git\n  repo: git@github.com:yourgithubname/yourgithubname.github.io.git\n  branch: master</code></pre>\n<p>安装deploy-git ，也就是部署的命令,这样才能用命令部署到github<br>wp-block-code</p>\n<pre><code class=\"bash\">$ npm install hexo-deployer-git --save</code></pre>\n<p>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ hexo clean 第一次安装不用清缓存\n$ hexo clean &amp;&amp;　hexo g -d 　缩写\n$ hexo g = hexo generate 生成静态文件\n$ hexo generate -deploy 生成静态文件后立即部署网站</code></pre>\n<p>打开下面的网址</p>\n<pre><code class=\"bash\">$ http://yourname.github.io</code></pre>\n<p>就可看到和<br><span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000</span><br>一样的了！<br>关联Git仓库<br>wp-block-code</p>\n<pre><code class=\"bash\">$ git clone https://github.com/你的用户名/你的用户名.github.io.git</code></pre>\n<p>执行之后会在当前目录生成’你的用户名.github.io’的文件夹，这是关联github仓库的文件夹，需要上传的文件都会移动到这里<br>更多精彩内容请点击hexo官网<br>(附上我的博客链接)<br>Hexo+Gitee<br>Gitee创建个人仓库<br>打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库<br>开启 Gitee Pages<br>点击启动<br>启动后，点击蓝色链接打开网址<br>初始化Git设置<br>输入命令<br>wp-block-code</p>\n<pre><code class=\"bash\">$ git config --global user.name &quot;这里输入你的Gitee注册名&quot;// 按回车\n$ git config --global user.email &quot;这里输你的Gitee邮箱&quot;</code></pre>\n<p>生成SSH密钥文件<br>wp-block-code</p>\n<pre><code class=\"bash\">$ ssh-keygen -t rsa -C &quot;你的Gitee注册邮箱&quot;\n$ // 可不输入，三个回车</code></pre>\n<p>复制粘贴到码云<br>配置 _config.yml<br>点击复制克隆/下载里面的https的内容<br>修改添加_config.yml以下内容<br>wp-block-code</p>\n<pre><code class=\"bash\">url: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名(粘贴)\nroot: /仓库名/\nwp-block-code\ndeploy:\n  type: git\n  repo: https://gitee.com/空间名/仓库名(粘贴)\n  branch: master</code></pre>\n<p>基础配置可以参考官方文档的配置说明</p>\n<pre><code class=\"bash\">$ wp-block-code\n$ hexo clean &amp;&amp;　hexo g -d 　缩写 清缓存\n$ hexo g = hexo generate 生成静态文件\n$ hexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee</code></pre>\n<p>打开Gitee Pages 服务 ，每次上传或改动，都要点击“更新”打开网址访问</p>\n",
            "tags": []
        }
    ]
}